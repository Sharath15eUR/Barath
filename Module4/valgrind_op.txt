==3379== Memcheck, a memory error detector
==3379== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3379== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==3379== Command: ./a.out
==3379== Parent PID: 2986
==3379== 
==3379== Invalid read of size 4
==3379==    at 0x10923B: test1 (module4.c:23)
==3379==    by 0x10955A: main (module4.c:76)
==3379==  Address 0x4a9a068 is 40 bytes inside a block of size 400 free'd
==3379==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3379==    by 0x109232: test1 (module4.c:22)
==3379==    by 0x10955A: main (module4.c:76)
==3379==  Block was alloc'd at
==3379==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3379==    by 0x1091DE: test1 (module4.c:14)
==3379==    by 0x10955A: main (module4.c:76)
==3379== 
==3379== Invalid write of size 4
==3379==    at 0x10931B: test3 (module4.c:43)
==3379==    by 0x10956E: main (module4.c:78)
==3379==  Address 0x4a9a704 is 4 bytes inside a block of size 200 free'd
==3379==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3379==    by 0x109328: test3 (module4.c:44)
==3379==    by 0x10956E: main (module4.c:78)
==3379==  Block was alloc'd at
==3379==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3379==    by 0x1092DC: test3 (module4.c:37)
==3379==    by 0x10956E: main (module4.c:78)
==3379== 
==3379== Invalid free() / delete / delete[] / realloc()
==3379==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3379==    by 0x109328: test3 (module4.c:44)
==3379==    by 0x10956E: main (module4.c:78)
==3379==  Address 0x4a9a700 is 0 bytes inside a block of size 200 free'd
==3379==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3379==    by 0x109328: test3 (module4.c:44)
==3379==    by 0x10956E: main (module4.c:78)
==3379==  Block was alloc'd at
==3379==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3379==    by 0x1092DC: test3 (module4.c:37)
==3379==    by 0x10956E: main (module4.c:78)
==3379== 
==3379== Invalid read of size 4
==3379==    at 0x1093B2: test4 (module4.c:59)
==3379==    by 0x109578: main (module4.c:79)
==3379==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3379== 
==3379== 
==3379== Process terminating with default action of signal 11 (SIGSEGV)
==3379==  Access not within mapped region at address 0x0
==3379==    at 0x1093B2: test4 (module4.c:59)
==3379==    by 0x109578: main (module4.c:79)
==3379==  If you believe this happened as a result of a stack
==3379==  overflow in your program's main thread (unlikely but
==3379==  possible), you can try to increase the size of the
==3379==  main thread stack using the --main-stacksize= flag.
==3379==  The main thread stack size used in this run was 8388608.
==3379== 
==3379== HEAP SUMMARY:
==3379==     in use at exit: 1,124 bytes in 2 blocks
==3379==   total heap usage: 5 allocs, 4 frees, 1,764 bytes allocated
==3379== 
==3379== 100 bytes in 1 blocks are definitely lost in loss record 1 of 2
==3379==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3379==    by 0x10926A: test2 (module4.c:27)
==3379==    by 0x109564: main (module4.c:77)
==3379== 
==3379== 1,024 bytes in 1 blocks are still reachable in loss record 2 of 2
==3379==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==3379==    by 0x48ECBA3: _IO_file_doallocate (filedoalloc.c:101)
==3379==    by 0x48FBCDF: _IO_doallocbuf (genops.c:347)
==3379==    by 0x48FAF5F: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:744)
==3379==    by 0x48F96D4: _IO_new_file_xsputn (fileops.c:1243)
==3379==    by 0x48F96D4: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==3379==    by 0x48E314C: outstring_func (vfprintf-internal.c:239)
==3379==    by 0x48E314C: __vfprintf_internal (vfprintf-internal.c:1263)
==3379==    by 0x48CE79E: printf (printf.c:33)
==3379==    by 0x109252: test1 (module4.c:23)
==3379==    by 0x10955A: main (module4.c:76)
==3379== 
==3379== LEAK SUMMARY:
==3379==    definitely lost: 100 bytes in 1 blocks
==3379==    indirectly lost: 0 bytes in 0 blocks
==3379==      possibly lost: 0 bytes in 0 blocks
==3379==    still reachable: 1,024 bytes in 1 blocks
==3379==         suppressed: 0 bytes in 0 blocks
==3379== 
==3379== For lists of detected and suppressed errors, rerun with: -s
==3379== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
