FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file /etc/freeradius/3.0/dictionary
including configuration file /etc/freeradius/3.0/radiusd.conf
including configuration file /etc/freeradius/3.0/proxy.conf
including configuration file /etc/freeradius/3.0/clients.conf
including files in directory /etc/freeradius/3.0/mods-enabled/
including configuration file /etc/freeradius/3.0/mods-enabled/soh
including configuration file /etc/freeradius/3.0/mods-enabled/unpack
including configuration file /etc/freeradius/3.0/mods-enabled/dynamic_clients
including configuration file /etc/freeradius/3.0/mods-enabled/linelog
including configuration file /etc/freeradius/3.0/mods-enabled/preprocess
including configuration file /etc/freeradius/3.0/mods-enabled/exec
including configuration file /etc/freeradius/3.0/mods-enabled/utf8
including configuration file /etc/freeradius/3.0/mods-enabled/pap
including configuration file /etc/freeradius/3.0/mods-enabled/unix
including configuration file /etc/freeradius/3.0/mods-enabled/files
including configuration file /etc/freeradius/3.0/mods-enabled/cache_eap
including configuration file /etc/freeradius/3.0/mods-enabled/attr_filter
including configuration file /etc/freeradius/3.0/mods-enabled/passwd
including configuration file /etc/freeradius/3.0/mods-enabled/eap
including configuration file /etc/freeradius/3.0/mods-enabled/sql
including configuration file /etc/freeradius/3.0/mods-config/sql/main/mysql/queries.conf
including configuration file /etc/freeradius/3.0/mods-enabled/ntlm_auth
including configuration file /etc/freeradius/3.0/mods-enabled/logintime
including configuration file /etc/freeradius/3.0/mods-enabled/chap
including configuration file /etc/freeradius/3.0/mods-enabled/always
including configuration file /etc/freeradius/3.0/mods-enabled/replicate
including configuration file /etc/freeradius/3.0/mods-enabled/radutmp
including configuration file /etc/freeradius/3.0/mods-enabled/realm
including configuration file /etc/freeradius/3.0/mods-enabled/sradutmp
including configuration file /etc/freeradius/3.0/mods-enabled/echo
including configuration file /etc/freeradius/3.0/mods-enabled/expiration
including configuration file /etc/freeradius/3.0/mods-enabled/mschap
including configuration file /etc/freeradius/3.0/mods-enabled/detail
including configuration file /etc/freeradius/3.0/mods-enabled/digest
including configuration file /etc/freeradius/3.0/mods-enabled/detail.log
including configuration file /etc/freeradius/3.0/mods-enabled/expr
including files in directory /etc/freeradius/3.0/policy.d/
including configuration file /etc/freeradius/3.0/policy.d/moonshot-targeted-ids
including configuration file /etc/freeradius/3.0/policy.d/accounting
including configuration file /etc/freeradius/3.0/policy.d/dhcp
including configuration file /etc/freeradius/3.0/policy.d/rfc7542
including configuration file /etc/freeradius/3.0/policy.d/eap
including configuration file /etc/freeradius/3.0/policy.d/canonicalization
including configuration file /etc/freeradius/3.0/policy.d/control
including configuration file /etc/freeradius/3.0/policy.d/debug
including configuration file /etc/freeradius/3.0/policy.d/cui
including configuration file /etc/freeradius/3.0/policy.d/filter
including configuration file /etc/freeradius/3.0/policy.d/abfab-tr
including configuration file /etc/freeradius/3.0/policy.d/operator-name
including files in directory /etc/freeradius/3.0/sites-enabled/
including configuration file /etc/freeradius/3.0/sites-enabled/inner-tunnel
including configuration file /etc/freeradius/3.0/sites-enabled/default
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	require_message_authenticator = no
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = mschap
 # Creating Auth-Type = eap
 # Creating Auth-Type = PAP
 # Creating Auth-Type = CHAP
 # Creating Auth-Type = MS-CHAP
 # Creating Auth-Type = digest
 # Creating Autz-Type = New-TLS-Connection
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_soh
  # Loading module "soh" from file /etc/freeradius/3.0/mods-enabled/soh
  soh {
  	dhcp = yes
  }
  # Loaded module rlm_unpack
  # Loading module "unpack" from file /etc/freeradius/3.0/mods-enabled/unpack
  # Loaded module rlm_dynamic_clients
  # Loading module "dynamic_clients" from file /etc/freeradius/3.0/mods-enabled/dynamic_clients
  # Loaded module rlm_linelog
  # Loading module "linelog" from file /etc/freeradius/3.0/mods-enabled/linelog
  linelog {
  	filename = "/var/log/freeradius/linelog"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = "This is a log message for %{User-Name}"
  	reference = "messages.%{%{reply:Packet-Type}:-default}"
  }
  # Loading module "log_accounting" from file /etc/freeradius/3.0/mods-enabled/linelog
  linelog log_accounting {
  	filename = "/var/log/freeradius/linelog-accounting"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = ""
  	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
  }
  # Loaded module rlm_preprocess
  # Loading module "preprocess" from file /etc/freeradius/3.0/mods-enabled/preprocess
  preprocess {
  	huntgroups = "/etc/freeradius/3.0/mods-config/preprocess/huntgroups"
  	hints = "/etc/freeradius/3.0/mods-config/preprocess/hints"
  	with_ascend_hack = no
  	ascend_channels_per_line = 23
  	with_ntdomain_hack = no
  	with_specialix_jetstream_hack = no
  	with_cisco_vsa_hack = no
  	with_alvarion_vsa_hack = no
  }
  # Loaded module rlm_exec
  # Loading module "exec" from file /etc/freeradius/3.0/mods-enabled/exec
  exec {
  	wait = no
  	input_pairs = "request"
  	shell_escape = yes
  	timeout = 10
  }
  # Loaded module rlm_utf8
  # Loading module "utf8" from file /etc/freeradius/3.0/mods-enabled/utf8
  # Loaded module rlm_pap
  # Loading module "pap" from file /etc/freeradius/3.0/mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_unix
  # Loading module "unix" from file /etc/freeradius/3.0/mods-enabled/unix
  unix {
  	radwtmp = "/var/log/freeradius/radwtmp"
  }
Creating attribute Unix-Group
  # Loaded module rlm_files
  # Loading module "files" from file /etc/freeradius/3.0/mods-enabled/files
  files {
  	filename = "/etc/freeradius/3.0/mods-config/files/authorize"
  	acctusersfile = "/etc/freeradius/3.0/mods-config/files/accounting"
  	preproxy_usersfile = "/etc/freeradius/3.0/mods-config/files/pre-proxy"
  }
  # Loaded module rlm_cache
  # Loading module "cache_eap" from file /etc/freeradius/3.0/mods-enabled/cache_eap
  cache cache_eap {
  	driver = "rlm_cache_rbtree"
  	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
  	ttl = 15
  	max_entries = 0
  	epoch = 0
  	add_stats = no
  }
  # Loaded module rlm_attr_filter
  # Loading module "attr_filter.post-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.post-proxy {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/post-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.pre-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.pre-proxy {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/pre-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_reject" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.access_reject {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/access_reject"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_challenge" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.access_challenge {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/access_challenge"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.accounting_response" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.accounting_response {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/accounting_response"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.coa" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.coa {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/coa"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loaded module rlm_passwd
  # Loading module "etc_passwd" from file /etc/freeradius/3.0/mods-enabled/passwd
  passwd etc_passwd {
  	filename = "/etc/passwd"
  	format = "*User-Name:Crypt-Password:"
  	delimiter = ":"
  	ignore_nislike = no
  	ignore_empty = yes
  	allow_multiple_keys = no
  	hash_size = 100
  }
  # Loaded module rlm_eap
  # Loading module "eap" from file /etc/freeradius/3.0/mods-enabled/eap
  eap {
  	default_eap_type = "md5"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  # Loaded module rlm_sql
  # Loading module "sql" from file /etc/freeradius/3.0/mods-enabled/sql
  sql {
  	driver = "rlm_sql_mysql"
  	server = "localhost"
  	port = 3306
  	login = "radius"
  	password = <<< secret >>>
  	radius_db = "radius"
  	read_groups = yes
  	read_profiles = yes
  	read_clients = yes
  	delete_stale_sessions = yes
  	sql_user_name = "%{User-Name}"
  	default_user_profile = ""
  	client_query = "SELECT id, nasname, shortname, type, secret, server FROM nas"
  	authorize_check_query = "SELECT id, username, attribute, value, op FROM radcheck WHERE username = '%{SQL-User-Name}' ORDER BY id"
  	authorize_reply_query = "SELECT id, username, attribute, value, op FROM radreply WHERE username = '%{SQL-User-Name}' ORDER BY id"
  	authorize_group_check_query = "SELECT id, groupname, attribute, Value, op FROM radgroupcheck WHERE groupname = '%{SQL-Group}' ORDER BY id"
  	authorize_group_reply_query = "SELECT id, groupname, attribute, value, op FROM radgroupreply WHERE groupname = '%{SQL-Group}' ORDER BY id"
  	group_membership_query = "SELECT groupname FROM radusergroup WHERE username = '%{SQL-User-Name}' ORDER BY priority"
  	simul_count_query = "SELECT COUNT(*) FROM radacct WHERE username = '%{SQL-User-Name}' AND acctstoptime IS NULL"
  	simul_verify_query = "SELECT radacctid, acctsessionid, username, nasipaddress, nasportid, framedipaddress, callingstationid, framedprotocol FROM radacct WHERE username = '%{SQL-User-Name}' AND acctstoptime IS NULL"
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /"
  	auto_escape = no
   accounting {
   	reference = "%{tolower:type.%{%{Acct-Status-Type}:-%{Request-Processing-Stage}}.query}"
    type {
     accounting-on {
     	query = "UPDATE radacct SET acctstoptime = FROM_UNIXTIME(%{%{integer:Event-Timestamp}:-%l}), acctsessiontime	= '%{%{integer:Event-Timestamp}:-%l}' - UNIX_TIMESTAMP(acctstarttime), acctterminatecause = '%{%{Acct-Terminate-Cause}:-NAS-Reboot}' WHERE acctstoptime IS NULL AND nasipaddress   = '%{NAS-IP-Address}' AND acctstarttime <= FROM_UNIXTIME(%{%{integer:Event-Timestamp}:-%l})"
     }
     accounting-off {
     	query = "UPDATE radacct SET acctstoptime = FROM_UNIXTIME(%{%{integer:Event-Timestamp}:-%l}), acctsessiontime	= '%{%{integer:Event-Timestamp}:-%l}' - UNIX_TIMESTAMP(acctstarttime), acctterminatecause = '%{%{Acct-Terminate-Cause}:-NAS-Reboot}' WHERE acctstoptime IS NULL AND nasipaddress   = '%{NAS-IP-Address}' AND acctstarttime <= FROM_UNIXTIME(%{%{integer:Event-Timestamp}:-%l})"
     }
     start {
     	query = "INSERT INTO radacct (acctsessionid,		acctuniqueid,		username, realm,			nasipaddress,		nasportid, nasporttype,		acctstarttime,		acctupdatetime, acctstoptime,		acctsessiontime, 	acctauthentic, connectinfo_start,	connectinfo_stop, 	acctinputoctets, acctoutputoctets,	calledstationid, 	callingstationid, acctterminatecause,	servicetype,		framedprotocol, framedipaddress,	framedipv6address,	framedipv6prefix, framedinterfaceid,	delegatedipv6prefix	) VALUES ('%{Acct-Session-Id}', '%{Acct-Unique-Session-Id}', '%{SQL-User-Name}', '%{Realm}', '%{NAS-IP-Address}', '%{%{NAS-Port-ID}:-%{NAS-Port}}', '%{NAS-Port-Type}', FROM_UNIXTIME(%{%{integer:Event-Timestamp}:-%l}), FROM_UNIXTIME(%{%{integer:Event-Timestamp}:-%l}), NULL, '0', '%{Acct-Authentic}', '%{Connect-Info}', '', '0', '0', '%{Called-Station-Id}', '%{Calling-Station-Id}', '', '%{Service-Type}', '%{Framed-Protocol}', '%{Framed-IP-Address}', '%{Framed-IPv6-Address}', '%{Framed-IPv6-Prefix}', '%{Framed-Interface-Id}', '%{Delegated-IPv6-Prefix}' )"
     }
     interim-update {
     	query = "UPDATE radacct SET acctupdatetime  = (@acctupdatetime_old:=acctupdatetime), acctupdatetime  = FROM_UNIXTIME(%{%{integer:Event-Timestamp}:-%l}), acctinterval    = %{%{integer:Event-Timestamp}:-%l} - UNIX_TIMESTAMP(@acctupdatetime_old), framedipaddress = '%{Framed-IP-Address}', framedipv6address = '%{Framed-IPv6-Address}', framedipv6prefix = '%{Framed-IPv6-Prefix}', framedinterfaceid = '%{Framed-Interface-Id}', delegatedipv6prefix = '%{Delegated-IPv6-Prefix}', acctsessiontime = %{%{Acct-Session-Time}:-NULL}, acctinputoctets = '%{%{Acct-Input-Gigawords}:-0}' << 32 | '%{%{Acct-Input-Octets}:-0}', acctoutputoctets = '%{%{Acct-Output-Gigawords}:-0}' << 32 | '%{%{Acct-Output-Octets}:-0}' WHERE AcctUniqueId = '%{Acct-Unique-Session-Id}'"
     }
     stop {
     	query = "UPDATE radacct SET acctstoptime	= FROM_UNIXTIME(%{%{integer:Event-Timestamp}:-%l}), acctsessiontime	= %{%{Acct-Session-Time}:-NULL}, acctinputoctets	= '%{%{Acct-Input-Gigawords}:-0}' << 32 | '%{%{Acct-Input-Octets}:-0}', acctoutputoctets = '%{%{Acct-Output-Gigawords}:-0}' << 32 | '%{%{Acct-Output-Octets}:-0}', acctterminatecause = '%{Acct-Terminate-Cause}', connectinfo_stop = '%{Connect-Info}' WHERE AcctUniqueId = '%{Acct-Unique-Session-Id}'"
     }
    }
   }
   post-auth {
   	reference = ".query"
   	query = "INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( '%{SQL-User-Name}', '%{%{User-Password}:-%{Chap-Password}}', '%{reply:Packet-Type}', '%S.%M' )"
   }
  }
rlm_sql (sql): Driver rlm_sql_mysql (module rlm_sql_mysql) loaded and linked
Creating attribute SQL-Group
  # Loading module "ntlm_auth" from file /etc/freeradius/3.0/mods-enabled/ntlm_auth
  exec ntlm_auth {
  	wait = yes
  	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
  	shell_escape = yes
  }
  # Loaded module rlm_logintime
  # Loading module "logintime" from file /etc/freeradius/3.0/mods-enabled/logintime
  logintime {
  	minimum_timeout = 60
  }
  # Loaded module rlm_chap
  # Loading module "chap" from file /etc/freeradius/3.0/mods-enabled/chap
  # Loaded module rlm_always
  # Loading module "reject" from file /etc/freeradius/3.0/mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file /etc/freeradius/3.0/mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file /etc/freeradius/3.0/mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file /etc/freeradius/3.0/mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file /etc/freeradius/3.0/mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file /etc/freeradius/3.0/mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file /etc/freeradius/3.0/mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file /etc/freeradius/3.0/mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file /etc/freeradius/3.0/mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_replicate
  # Loading module "replicate" from file /etc/freeradius/3.0/mods-enabled/replicate
  # Loaded module rlm_radutmp
  # Loading module "radutmp" from file /etc/freeradius/3.0/mods-enabled/radutmp
  radutmp {
  	filename = "/var/log/freeradius/radutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 384
  	caller_id = yes
  }
  # Loaded module rlm_realm
  # Loading module "IPASS" from file /etc/freeradius/3.0/mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file /etc/freeradius/3.0/mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file /etc/freeradius/3.0/mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file /etc/freeradius/3.0/mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file /etc/freeradius/3.0/mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "sradutmp" from file /etc/freeradius/3.0/mods-enabled/sradutmp
  radutmp sradutmp {
  	filename = "/var/log/freeradius/sradutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 420
  	caller_id = no
  }
  # Loading module "echo" from file /etc/freeradius/3.0/mods-enabled/echo
  exec echo {
  	wait = yes
  	program = "/bin/echo %{User-Name}"
  	input_pairs = "request"
  	output_pairs = "reply"
  	shell_escape = yes
  }
  # Loaded module rlm_expiration
  # Loading module "expiration" from file /etc/freeradius/3.0/mods-enabled/expiration
  # Loaded module rlm_mschap
  # Loading module "mschap" from file /etc/freeradius/3.0/mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_detail
  # Loading module "detail" from file /etc/freeradius/3.0/mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_digest
  # Loading module "digest" from file /etc/freeradius/3.0/mods-enabled/digest
  # Loading module "auth_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  detail auth_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "reply_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  detail reply_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "pre_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  detail pre_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "post_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  detail post_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_expr
  # Loading module "expr" from file /etc/freeradius/3.0/mods-enabled/expr
  expr {
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /äéöüàâæçèéêëîïôœùûüaÿÄÉÖÜßÀÂÆÇÈÉÊËÎÏÔŒÙÛÜŸ"
  }
  instantiate {
  }
  # Instantiating module "linelog" from file /etc/freeradius/3.0/mods-enabled/linelog
  # Instantiating module "log_accounting" from file /etc/freeradius/3.0/mods-enabled/linelog
  # Instantiating module "preprocess" from file /etc/freeradius/3.0/mods-enabled/preprocess
reading pairlist file /etc/freeradius/3.0/mods-config/preprocess/huntgroups
reading pairlist file /etc/freeradius/3.0/mods-config/preprocess/hints
  # Instantiating module "pap" from file /etc/freeradius/3.0/mods-enabled/pap
  # Instantiating module "files" from file /etc/freeradius/3.0/mods-enabled/files
reading pairlist file /etc/freeradius/3.0/mods-config/files/authorize
reading pairlist file /etc/freeradius/3.0/mods-config/files/accounting
reading pairlist file /etc/freeradius/3.0/mods-config/files/pre-proxy
  # Instantiating module "cache_eap" from file /etc/freeradius/3.0/mods-enabled/cache_eap
rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
  # Instantiating module "attr_filter.post-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/post-proxy
  # Instantiating module "attr_filter.pre-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/pre-proxy
  # Instantiating module "attr_filter.access_reject" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/access_reject
  # Instantiating module "attr_filter.access_challenge" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/access_challenge
  # Instantiating module "attr_filter.accounting_response" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/accounting_response
  # Instantiating module "attr_filter.coa" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/coa
  # Instantiating module "etc_passwd" from file /etc/freeradius/3.0/mods-enabled/passwd
rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
  # Instantiating module "eap" from file /etc/freeradius/3.0/mods-enabled/eap
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "/etc/freeradius/3.0/certs"
   	pem_file_type = yes
   	private_key_file = "/etc/ssl/private/ssl-cert-snakeoil.key"
   	certificate_file = "/etc/ssl/certs/ssl-cert-snakeoil.pem"
   	ca_file = "/etc/ssl/certs/ca-certificates.crt"
   	private_key_password = <<< secret >>>
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.2"
   	tls_min_version = "1.2"
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "md5"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	virtual_server = "inner-tunnel"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = yes
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "inner-tunnel"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
  # Instantiating module "sql" from file /etc/freeradius/3.0/mods-enabled/sql
rlm_sql_mysql: libmysql version: 8.0.36
   mysql {
    tls {
    	tls_required = no
    	check_cert = no
    	check_cert_cn = no
    }
   	warnings = "auto"
   }
rlm_sql (sql): Attempting to connect to database "radius"
rlm_sql (sql): Initialising connection pool
   pool {
   	start = 5
   	min = 3
   	max = 32
   	spare = 10
   	uses = 0
   	lifetime = 0
   	cleanup_interval = 30
   	idle_timeout = 60
   	retry_delay = 30
   	spread = no
   }
rlm_sql (sql): Opening additional connection (0), 1 of 32 pending slots used
rlm_sql_mysql: Starting connect to MySQL server
rlm_sql_mysql: Connected to database 'radius' on Localhost via UNIX socket, server version 5.5.5-10.6.16-MariaDB-0ubuntu0.22.04.1, protocol version 10
rlm_sql (sql): Opening additional connection (1), 1 of 31 pending slots used
rlm_sql_mysql: Starting connect to MySQL server
rlm_sql_mysql: Connected to database 'radius' on Localhost via UNIX socket, server version 5.5.5-10.6.16-MariaDB-0ubuntu0.22.04.1, protocol version 10
rlm_sql (sql): Opening additional connection (2), 1 of 30 pending slots used
rlm_sql_mysql: Starting connect to MySQL server
rlm_sql_mysql: Connected to database 'radius' on Localhost via UNIX socket, server version 5.5.5-10.6.16-MariaDB-0ubuntu0.22.04.1, protocol version 10
rlm_sql (sql): Opening additional connection (3), 1 of 29 pending slots used
rlm_sql_mysql: Starting connect to MySQL server
rlm_sql_mysql: Connected to database 'radius' on Localhost via UNIX socket, server version 5.5.5-10.6.16-MariaDB-0ubuntu0.22.04.1, protocol version 10
rlm_sql (sql): Opening additional connection (4), 1 of 28 pending slots used
rlm_sql_mysql: Starting connect to MySQL server
rlm_sql_mysql: Connected to database 'radius' on Localhost via UNIX socket, server version 5.5.5-10.6.16-MariaDB-0ubuntu0.22.04.1, protocol version 10
rlm_sql (sql): Processing generate_sql_clients
rlm_sql (sql) in generate_sql_clients: query is SELECT id, nasname, shortname, type, secret, server FROM nas
rlm_sql (sql): Reserved connection (0)
rlm_sql (sql): Executing select query: SELECT id, nasname, shortname, type, secret, server FROM nas
rlm_sql (sql): Adding client sample (test) to rad clients list
Failed resolving "sample" to IPv4 address: Temporary failure in name resolution
rlm_sql (sql): Released connection (0)
Need more connections to reach 10 spares
rlm_sql (sql): Opening additional connection (5), 1 of 27 pending slots used
rlm_sql_mysql: Starting connect to MySQL server
rlm_sql_mysql: Connected to database 'radius' on Localhost via UNIX socket, server version 5.5.5-10.6.16-MariaDB-0ubuntu0.22.04.1, protocol version 10
  # Instantiating module "logintime" from file /etc/freeradius/3.0/mods-enabled/logintime
  # Instantiating module "reject" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "fail" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "ok" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "handled" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "invalid" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "userlock" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "notfound" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "noop" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "updated" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "IPASS" from file /etc/freeradius/3.0/mods-enabled/realm
  # Instantiating module "suffix" from file /etc/freeradius/3.0/mods-enabled/realm
  # Instantiating module "bangpath" from file /etc/freeradius/3.0/mods-enabled/realm
  # Instantiating module "realmpercent" from file /etc/freeradius/3.0/mods-enabled/realm
  # Instantiating module "ntdomain" from file /etc/freeradius/3.0/mods-enabled/realm
  # Instantiating module "expiration" from file /etc/freeradius/3.0/mods-enabled/expiration
  # Instantiating module "mschap" from file /etc/freeradius/3.0/mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "detail" from file /etc/freeradius/3.0/mods-enabled/detail
  # Instantiating module "auth_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
  # Instantiating module "reply_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  # Instantiating module "pre_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  # Instantiating module "post_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file /etc/freeradius/3.0/radiusd.conf
} # server
server inner-tunnel { # from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Ignoring "ldap" (see raddb/mods-available/README.rst)
 # Loading session {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
 # Skipping contents of 'if' as it is always 'false' -- /etc/freeradius/3.0/sites-enabled/inner-tunnel:336
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
} # server inner-tunnel
server default { # from file /etc/freeradius/3.0/sites-enabled/default
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Compiling Autz-Type New-TLS-Connection for attr Autz-Type
 # Loading preacct {...}
 # Loading accounting {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
} # server default
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipaddr = 127.0.0.1
  	port = 18120
}
listen {
  	type = "auth"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on proxy address * port 59725
Listening on proxy address :: port 57832
Ready to process requests
(0) Received Access-Request Id 0 from 127.0.0.1:53006 to 127.0.0.1:1812 length 129
(0)   User-Name = "barath"
(0)   NAS-IP-Address = 127.0.0.1
(0)   Calling-Station-Id = "02-00-00-00-00-01"
(0)   Framed-MTU = 1400
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   Connect-Info = "CONNECT 11Mbps 802.11b"
(0)   Called-Station-Id = ""
(0)   EAP-Message = 0x023b000b01626172617468
(0)   Message-Authenticator = 0x4b488e8e1a5ce7fa6f66cdca58d144a5
(0) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(0)   authorize {
(0)     policy filter_username {
(0)       if (&User-Name) {
(0)       if (&User-Name)  -> TRUE
(0)       if (&User-Name)  {
(0)         if (&User-Name =~ / /) {
(0)         if (&User-Name =~ / /)  -> FALSE
(0)         if (&User-Name =~ /@[^@]*@/ ) {
(0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(0)         if (&User-Name =~ /\.\./ ) {
(0)         if (&User-Name =~ /\.\./ )  -> FALSE
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(0)         if (&User-Name =~ /\.$/)  {
(0)         if (&User-Name =~ /\.$/)   -> FALSE
(0)         if (&User-Name =~ /@\./)  {
(0)         if (&User-Name =~ /@\./)   -> FALSE
(0)       } # if (&User-Name)  = notfound
(0)     } # policy filter_username = notfound
(0)     [preprocess] = ok
(0)     [chap] = noop
(0)     [mschap] = noop
(0)     [digest] = noop
(0) suffix: Checking for suffix after "@"
(0) suffix: No '@' in User-Name = "barath", looking up realm NULL
(0) suffix: No such realm "NULL"
(0)     [suffix] = noop
(0) eap: Peer sent EAP Response (code 2) ID 59 length 11
(0) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap] = ok
(0)   } # authorize = ok
(0) Found Auth-Type = eap
(0) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(0)   authenticate {
(0) eap: Peer sent packet with method EAP Identity (1)
(0) eap: Calling submodule eap_md5 to process data
(0) eap_md5: Issuing MD5 Challenge
(0) eap: Sending EAP Request (code 1) ID 60 length 22
(0) eap: EAP session adding &reply:State = 0x7503e270753fe670
(0)     [eap] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(0)   Challenge { ... } # empty sub-section is ignored
(0) Sent Access-Challenge Id 0 from 127.0.0.1:1812 to 127.0.0.1:53006 length 80
(0)   EAP-Message = 0x013c00160410fef2147717797926abc9fdd9a194058d
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0x7503e270753fe670553b594ff40061b9
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 1 from 127.0.0.1:53006 to 127.0.0.1:1812 length 142
(1)   User-Name = "barath"
(1)   NAS-IP-Address = 127.0.0.1
(1)   Calling-Station-Id = "02-00-00-00-00-01"
(1)   Framed-MTU = 1400
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   Connect-Info = "CONNECT 11Mbps 802.11b"
(1)   Called-Station-Id = ""
(1)   EAP-Message = 0x023c00060319
(1)   State = 0x7503e270753fe670553b594ff40061b9
(1)   Message-Authenticator = 0xd88c30050f21e0a5ad8fb9c3d8024ed7
(1) session-state: No cached attributes
(1) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(1)   authorize {
(1)     policy filter_username {
(1)       if (&User-Name) {
(1)       if (&User-Name)  -> TRUE
(1)       if (&User-Name)  {
(1)         if (&User-Name =~ / /) {
(1)         if (&User-Name =~ / /)  -> FALSE
(1)         if (&User-Name =~ /@[^@]*@/ ) {
(1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(1)         if (&User-Name =~ /\.\./ ) {
(1)         if (&User-Name =~ /\.\./ )  -> FALSE
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(1)         if (&User-Name =~ /\.$/)  {
(1)         if (&User-Name =~ /\.$/)   -> FALSE
(1)         if (&User-Name =~ /@\./)  {
(1)         if (&User-Name =~ /@\./)   -> FALSE
(1)       } # if (&User-Name)  = notfound
(1)     } # policy filter_username = notfound
(1)     [preprocess] = ok
(1)     [chap] = noop
(1)     [mschap] = noop
(1)     [digest] = noop
(1) suffix: Checking for suffix after "@"
(1) suffix: No '@' in User-Name = "barath", looking up realm NULL
(1) suffix: No such realm "NULL"
(1)     [suffix] = noop
(1) eap: Peer sent EAP Response (code 2) ID 60 length 6
(1) eap: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap] = updated
(1) files: users: Matched entry barath at line 87
(1) files: EXPAND Hello, %{User-Name}
(1) files:    --> Hello, barath
(1)     [files] = ok
(1) sql: EXPAND %{User-Name}
(1) sql:    --> barath
(1) sql: SQL-User-Name set to 'barath'
rlm_sql (sql): Reserved connection (1)
(1) sql: EXPAND SELECT id, username, attribute, value, op FROM radcheck WHERE username = '%{SQL-User-Name}' ORDER BY id
(1) sql:    --> SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(1) sql: Executing select query: SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(1) sql: WARNING: User not found in radcheck table.
(1) sql: EXPAND SELECT groupname FROM radusergroup WHERE username = '%{SQL-User-Name}' ORDER BY priority
(1) sql:    --> SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(1) sql: Executing select query: SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(1) sql: User not found in any groups
rlm_sql (sql): Released connection (1)
Need more connections to reach 10 spares
rlm_sql (sql): Opening additional connection (6), 1 of 26 pending slots used
rlm_sql_mysql: Starting connect to MySQL server
WARNING: MYSQL_OPT_RECONNECT is deprecated and will be removed in a future version.
rlm_sql_mysql: Connected to database 'radius' on Localhost via UNIX socket, server version 5.5.5-10.6.16-MariaDB-0ubuntu0.22.04.1, protocol version 10
(1)     [sql] = notfound
(1)     [expiration] = noop
(1)     [logintime] = noop
(1) pap: WARNING: Auth-Type already set.  Not setting to PAP
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap
(1) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(1)   authenticate {
(1) eap: Expiring EAP session with state 0x7503e270753fe670
(1) eap: Finished EAP session with state 0x7503e270753fe670
(1) eap: Previous EAP request found for state 0x7503e270753fe670, released from the list
(1) eap: Peer sent packet with method EAP NAK (3)
(1) eap: Found mutually acceptable type PEAP (25)
(1) eap: Calling submodule eap_peap to process data
(1) eap_peap: (TLS) Initiating new session
(1) eap: Sending EAP Request (code 1) ID 61 length 6
(1) eap: EAP session adding &reply:State = 0x7503e270743efb70
(1)     [eap] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(1)   Challenge { ... } # empty sub-section is ignored
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 994
(1) Sent Access-Challenge Id 1 from 127.0.0.1:1812 to 127.0.0.1:53006 length 79
(1)   Reply-Message = "Hello, barath"
(1)   EAP-Message = 0x013d00061920
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0x7503e270743efb70553b594ff40061b9
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 2 from 127.0.0.1:53006 to 127.0.0.1:1812 length 330
(2)   User-Name = "barath"
(2)   NAS-IP-Address = 127.0.0.1
(2)   Calling-Station-Id = "02-00-00-00-00-01"
(2)   Framed-MTU = 1400
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   Connect-Info = "CONNECT 11Mbps 802.11b"
(2)   Called-Station-Id = ""
(2)   EAP-Message = 0x023d00c21980000000b816030100b3010000af0303f4f3fdc0e2ecf2581fb5359985f89c99acc8f681e180c8fe7a5f1d892bdb4bbd000038c02cc030009fcca9cca8ccaac02bc02f009ec024c028006bc023c0270067c00ac0140039c009c0130033009d009c003d003c0035002f00ff0100004e000b000403000102000a000c000a001d0017001e001900180016000000170000000d002a0028040305030603080708080809080a080b080408050806040105010601030303010302040205020602
(2)   State = 0x7503e270743efb70553b594ff40061b9
(2)   Message-Authenticator = 0xc4acd15ebff672fae361b745becf8164
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 994
(2) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(2)   authorize {
(2)     policy filter_username {
(2)       if (&User-Name) {
(2)       if (&User-Name)  -> TRUE
(2)       if (&User-Name)  {
(2)         if (&User-Name =~ / /) {
(2)         if (&User-Name =~ / /)  -> FALSE
(2)         if (&User-Name =~ /@[^@]*@/ ) {
(2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(2)         if (&User-Name =~ /\.\./ ) {
(2)         if (&User-Name =~ /\.\./ )  -> FALSE
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(2)         if (&User-Name =~ /\.$/)  {
(2)         if (&User-Name =~ /\.$/)   -> FALSE
(2)         if (&User-Name =~ /@\./)  {
(2)         if (&User-Name =~ /@\./)   -> FALSE
(2)       } # if (&User-Name)  = notfound
(2)     } # policy filter_username = notfound
(2)     [preprocess] = ok
(2)     [chap] = noop
(2)     [mschap] = noop
(2)     [digest] = noop
(2) suffix: Checking for suffix after "@"
(2) suffix: No '@' in User-Name = "barath", looking up realm NULL
(2) suffix: No such realm "NULL"
(2)     [suffix] = noop
(2) eap: Peer sent EAP Response (code 2) ID 61 length 194
(2) eap: Continuing tunnel setup
(2)     [eap] = ok
(2)   } # authorize = ok
(2) Found Auth-Type = eap
(2) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(2)   authenticate {
(2) eap: Expiring EAP session with state 0x7503e270743efb70
(2) eap: Finished EAP session with state 0x7503e270743efb70
(2) eap: Previous EAP request found for state 0x7503e270743efb70, released from the list
(2) eap: Peer sent packet with method EAP PEAP (25)
(2) eap: Calling submodule eap_peap to process data
(2) eap_peap: (TLS) EAP Peer says that the final record size will be 184 bytes
(2) eap_peap: (TLS) EAP Got all data (184 bytes)
(2) eap_peap: (TLS) Handshake state - before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(2) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(2) eap_peap: (TLS) In Handshake Phase
(2) eap: Sending EAP Request (code 1) ID 62 length 1004
(2) eap: EAP session adding &reply:State = 0x7503e270773dfb70
(2)     [eap] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(2)   Challenge { ... } # empty sub-section is ignored
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 994
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) Sent Access-Challenge Id 2 from 127.0.0.1:1812 to 127.0.0.1:53006 length 1068
(2)   EAP-Message = 0x013e03ec19c00000047e160303003d02000039030374a81063065b4b17b3ca8f4c39bd5e4bd9cb65861cacf6d1e0e9a84444db880600c030000011ff01000100000b0004030001020017000016030302fd0b0002f90002f60002f3308202ef308201d7a00302010202142f416a9bb38485c6c9da5c02142a5a5a3f8127ad300d06092a864886f70d01010b05003011310f300d06035504030c067562756e7475301e170d3234303232343135353430305a170d3334303232313135353430305a3011310f300d06035504030c067562756e747530820122300d06092a864886f70d01010105000382010f003082010a0282010100a526c88050efc9906ac6b937b09dfc3ac8bb1bfb18b2c7c28c4c3b09a320819dc05c516a8798c815a033584625873e99a3630fa83c99a05ac08de4f178ed9fc32d8a43023163b47054b1cd778ad278851bbc03c95e93a8ca37edf2e40f1ad9bfae053ac1d91842f906da9243d501309e2bcb408bbcf0ba3a5af30e7315d9e59e212123
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0x7503e270773dfb70553b594ff40061b9
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 3 from 127.0.0.1:53006 to 127.0.0.1:1812 length 142
(3)   User-Name = "barath"
(3)   NAS-IP-Address = 127.0.0.1
(3)   Calling-Station-Id = "02-00-00-00-00-01"
(3)   Framed-MTU = 1400
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   Connect-Info = "CONNECT 11Mbps 802.11b"
(3)   Called-Station-Id = ""
(3)   EAP-Message = 0x023e00061900
(3)   State = 0x7503e270773dfb70553b594ff40061b9
(3)   Message-Authenticator = 0x5c4fedef561d9e9a8656db04a8be3c78
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 994
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(3)   authorize {
(3)     policy filter_username {
(3)       if (&User-Name) {
(3)       if (&User-Name)  -> TRUE
(3)       if (&User-Name)  {
(3)         if (&User-Name =~ / /) {
(3)         if (&User-Name =~ / /)  -> FALSE
(3)         if (&User-Name =~ /@[^@]*@/ ) {
(3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(3)         if (&User-Name =~ /\.\./ ) {
(3)         if (&User-Name =~ /\.\./ )  -> FALSE
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(3)         if (&User-Name =~ /\.$/)  {
(3)         if (&User-Name =~ /\.$/)   -> FALSE
(3)         if (&User-Name =~ /@\./)  {
(3)         if (&User-Name =~ /@\./)   -> FALSE
(3)       } # if (&User-Name)  = notfound
(3)     } # policy filter_username = notfound
(3)     [preprocess] = ok
(3)     [chap] = noop
(3)     [mschap] = noop
(3)     [digest] = noop
(3) suffix: Checking for suffix after "@"
(3) suffix: No '@' in User-Name = "barath", looking up realm NULL
(3) suffix: No such realm "NULL"
(3)     [suffix] = noop
(3) eap: Peer sent EAP Response (code 2) ID 62 length 6
(3) eap: Continuing tunnel setup
(3)     [eap] = ok
(3)   } # authorize = ok
(3) Found Auth-Type = eap
(3) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(3)   authenticate {
(3) eap: Expiring EAP session with state 0x7503e270773dfb70
(3) eap: Finished EAP session with state 0x7503e270773dfb70
(3) eap: Previous EAP request found for state 0x7503e270773dfb70, released from the list
(3) eap: Peer sent packet with method EAP PEAP (25)
(3) eap: Calling submodule eap_peap to process data
(3) eap_peap: (TLS) Peer ACKed our handshake fragment
(3) eap: Sending EAP Request (code 1) ID 63 length 162
(3) eap: EAP session adding &reply:State = 0x7503e270763cfb70
(3)     [eap] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(3)   Challenge { ... } # empty sub-section is ignored
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 994
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) Sent Access-Challenge Id 3 from 127.0.0.1:1812 to 127.0.0.1:53006 length 220
(3)   EAP-Message = 0x013f00a21900e88c7df4340f1672e920a991d1b08e2936d8a41721bd73bedbb60e36d66dffccb577dffd98b08f40a18d489468559c0cb35a285cca2a2f33e309900a8220fbaf0f85721e6959f2808cb9563032909f2e6141a367fff34dc98c722f0b3eb55df1cee475d6ba6046fe8870e97f04c286fc124936410e4ccb371b7f7efb3fb5ed73591019215fcb989c6a5927d90bd9430c8b560616030300040e000000
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0x7503e270763cfb70553b594ff40061b9
(3) Finished request
Waking up in 4.9 seconds.
(4) Received Access-Request Id 4 from 127.0.0.1:53006 to 127.0.0.1:1812 length 239
(4)   User-Name = "barath"
(4)   NAS-IP-Address = 127.0.0.1
(4)   Calling-Station-Id = "02-00-00-00-00-01"
(4)   Framed-MTU = 1400
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   Connect-Info = "CONNECT 11Mbps 802.11b"
(4)   Called-Station-Id = ""
(4)   EAP-Message = 0x023f006719800000005d160303002510000021207dff397e4c15cbb88327728c4bdc93e0b60f50f85ea656e2d9d99c16acf92f711403030001011603030028f1b772b8ed0c18912f74e79cde5ce9a62abbcc408bf6c5baa99c5fa1f1c9bb4beb6e03e595e12fa0
(4)   State = 0x7503e270763cfb70553b594ff40061b9
(4)   Message-Authenticator = 0xd7b88f1b329864075548de48516911fd
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 994
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(4)   authorize {
(4)     policy filter_username {
(4)       if (&User-Name) {
(4)       if (&User-Name)  -> TRUE
(4)       if (&User-Name)  {
(4)         if (&User-Name =~ / /) {
(4)         if (&User-Name =~ / /)  -> FALSE
(4)         if (&User-Name =~ /@[^@]*@/ ) {
(4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(4)         if (&User-Name =~ /\.\./ ) {
(4)         if (&User-Name =~ /\.\./ )  -> FALSE
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(4)         if (&User-Name =~ /\.$/)  {
(4)         if (&User-Name =~ /\.$/)   -> FALSE
(4)         if (&User-Name =~ /@\./)  {
(4)         if (&User-Name =~ /@\./)   -> FALSE
(4)       } # if (&User-Name)  = notfound
(4)     } # policy filter_username = notfound
(4)     [preprocess] = ok
(4)     [chap] = noop
(4)     [mschap] = noop
(4)     [digest] = noop
(4) suffix: Checking for suffix after "@"
(4) suffix: No '@' in User-Name = "barath", looking up realm NULL
(4) suffix: No such realm "NULL"
(4)     [suffix] = noop
(4) eap: Peer sent EAP Response (code 2) ID 63 length 103
(4) eap: Continuing tunnel setup
(4)     [eap] = ok
(4)   } # authorize = ok
(4) Found Auth-Type = eap
(4) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(4)   authenticate {
(4) eap: Expiring EAP session with state 0x7503e270763cfb70
(4) eap: Finished EAP session with state 0x7503e270763cfb70
(4) eap: Previous EAP request found for state 0x7503e270763cfb70, released from the list
(4) eap: Peer sent packet with method EAP PEAP (25)
(4) eap: Calling submodule eap_peap to process data
(4) eap_peap: (TLS) EAP Peer says that the final record size will be 93 bytes
(4) eap_peap: (TLS) EAP Got all data (93 bytes)
(4) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(4) eap_peap: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(4) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(4) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(4) eap_peap: (TLS) recv TLS 1.2 Handshake, Finished
(4) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read finished
(4) eap_peap: (TLS) send TLS 1.2 ChangeCipherSpec
(4) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(4) eap_peap: (TLS) send TLS 1.2 Handshake, Finished
(4) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write finished
(4) eap_peap: (TLS) Handshake state - SSL negotiation finished successfully
(4) eap_peap: (TLS) Connection Established
(4) eap_peap:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(4) eap_peap:   TLS-Session-Version = "TLS 1.2"
(4) eap: Sending EAP Request (code 1) ID 64 length 57
(4) eap: EAP session adding &reply:State = 0x7503e2707143fb70
(4)     [eap] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(4)   Challenge { ... } # empty sub-section is ignored
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 994
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(4)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(4)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(4)   TLS-Session-Version = "TLS 1.2"
(4) Sent Access-Challenge Id 4 from 127.0.0.1:1812 to 127.0.0.1:53006 length 115
(4)   EAP-Message = 0x01400039190014030300010116030300287edb7c5b9d658256126f3e5f4844adc0e8fc89d3538e27fef2a403147dfa383009d83cc791345d17
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0x7503e2707143fb70553b594ff40061b9
(4) Finished request
Waking up in 4.9 seconds.
(5) Received Access-Request Id 5 from 127.0.0.1:53006 to 127.0.0.1:1812 length 142
(5)   User-Name = "barath"
(5)   NAS-IP-Address = 127.0.0.1
(5)   Calling-Station-Id = "02-00-00-00-00-01"
(5)   Framed-MTU = 1400
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   Connect-Info = "CONNECT 11Mbps 802.11b"
(5)   Called-Station-Id = ""
(5)   EAP-Message = 0x024000061900
(5)   State = 0x7503e2707143fb70553b594ff40061b9
(5)   Message-Authenticator = 0x8e1e1bfe040dc2314a6dd71811239c64
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 994
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(5)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5)   &session-state:TLS-Session-Version = "TLS 1.2"
(5) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(5)   authorize {
(5)     policy filter_username {
(5)       if (&User-Name) {
(5)       if (&User-Name)  -> TRUE
(5)       if (&User-Name)  {
(5)         if (&User-Name =~ / /) {
(5)         if (&User-Name =~ / /)  -> FALSE
(5)         if (&User-Name =~ /@[^@]*@/ ) {
(5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(5)         if (&User-Name =~ /\.\./ ) {
(5)         if (&User-Name =~ /\.\./ )  -> FALSE
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(5)         if (&User-Name =~ /\.$/)  {
(5)         if (&User-Name =~ /\.$/)   -> FALSE
(5)         if (&User-Name =~ /@\./)  {
(5)         if (&User-Name =~ /@\./)   -> FALSE
(5)       } # if (&User-Name)  = notfound
(5)     } # policy filter_username = notfound
(5)     [preprocess] = ok
(5)     [chap] = noop
(5)     [mschap] = noop
(5)     [digest] = noop
(5) suffix: Checking for suffix after "@"
(5) suffix: No '@' in User-Name = "barath", looking up realm NULL
(5) suffix: No such realm "NULL"
(5)     [suffix] = noop
(5) eap: Peer sent EAP Response (code 2) ID 64 length 6
(5) eap: Continuing tunnel setup
(5)     [eap] = ok
(5)   } # authorize = ok
(5) Found Auth-Type = eap
(5) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(5)   authenticate {
(5) eap: Expiring EAP session with state 0x7503e2707143fb70
(5) eap: Finished EAP session with state 0x7503e2707143fb70
(5) eap: Previous EAP request found for state 0x7503e2707143fb70, released from the list
(5) eap: Peer sent packet with method EAP PEAP (25)
(5) eap: Calling submodule eap_peap to process data
(5) eap_peap: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(5) eap_peap: Session established.  Decoding tunneled attributes
(5) eap_peap: PEAP state TUNNEL ESTABLISHED
(5) eap: Sending EAP Request (code 1) ID 65 length 40
(5) eap: EAP session adding &reply:State = 0x7503e2707042fb70
(5)     [eap] = handled
(5)   } # authenticate = handled
(5) Using Post-Auth-Type Challenge
(5) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(5)   Challenge { ... } # empty sub-section is ignored
(5) session-state: Saving cached attributes
(5)   Framed-MTU = 994
(5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5)   TLS-Session-Version = "TLS 1.2"
(5) Sent Access-Challenge Id 5 from 127.0.0.1:1812 to 127.0.0.1:53006 length 98
(5)   EAP-Message = 0x014100281900170303001d7edb7c5b9d658257d90fb028871b42c0869c6a4e75c9e2908d28229874
(5)   Message-Authenticator = 0x00000000000000000000000000000000
(5)   State = 0x7503e2707042fb70553b594ff40061b9
(5) Finished request
Waking up in 4.9 seconds.
(6) Received Access-Request Id 6 from 127.0.0.1:53006 to 127.0.0.1:1812 length 178
(6)   User-Name = "barath"
(6)   NAS-IP-Address = 127.0.0.1
(6)   Calling-Station-Id = "02-00-00-00-00-01"
(6)   Framed-MTU = 1400
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   Connect-Info = "CONNECT 11Mbps 802.11b"
(6)   Called-Station-Id = ""
(6)   EAP-Message = 0x0241002a1900170303001ff1b772b8ed0c18922d454858d2f024221a82cffb5eb21c4c74e5ff0e3df1e4
(6)   State = 0x7503e2707042fb70553b594ff40061b9
(6)   Message-Authenticator = 0xd3c8d70c47d990006756ff3dc9f13c26
(6) Restoring &session-state
(6)   &session-state:Framed-MTU = 994
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   &session-state:TLS-Session-Version = "TLS 1.2"
(6) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(6)   authorize {
(6)     policy filter_username {
(6)       if (&User-Name) {
(6)       if (&User-Name)  -> TRUE
(6)       if (&User-Name)  {
(6)         if (&User-Name =~ / /) {
(6)         if (&User-Name =~ / /)  -> FALSE
(6)         if (&User-Name =~ /@[^@]*@/ ) {
(6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)         if (&User-Name =~ /\.\./ ) {
(6)         if (&User-Name =~ /\.\./ )  -> FALSE
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)         if (&User-Name =~ /\.$/)  {
(6)         if (&User-Name =~ /\.$/)   -> FALSE
(6)         if (&User-Name =~ /@\./)  {
(6)         if (&User-Name =~ /@\./)   -> FALSE
(6)       } # if (&User-Name)  = notfound
(6)     } # policy filter_username = notfound
(6)     [preprocess] = ok
(6)     [chap] = noop
(6)     [mschap] = noop
(6)     [digest] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "barath", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)     [suffix] = noop
(6) eap: Peer sent EAP Response (code 2) ID 65 length 42
(6) eap: Continuing tunnel setup
(6)     [eap] = ok
(6)   } # authorize = ok
(6) Found Auth-Type = eap
(6) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(6)   authenticate {
(6) eap: Expiring EAP session with state 0x7503e2707042fb70
(6) eap: Finished EAP session with state 0x7503e2707042fb70
(6) eap: Previous EAP request found for state 0x7503e2707042fb70, released from the list
(6) eap: Peer sent packet with method EAP PEAP (25)
(6) eap: Calling submodule eap_peap to process data
(6) eap_peap: (TLS) EAP Done initial handshake
(6) eap_peap: Session established.  Decoding tunneled attributes
(6) eap_peap: PEAP state WAITING FOR INNER IDENTITY
(6) eap_peap: Identity - barath
(6) eap_peap: Got inner identity 'barath'
(6) eap_peap: Setting default EAP type for tunneled EAP session
(6) eap_peap: Got tunneled request
(6) eap_peap:   EAP-Message = 0x0241000b01626172617468
(6) eap_peap: Setting User-Name to barath
(6) eap_peap: Sending tunneled request to inner-tunnel
(6) eap_peap:   EAP-Message = 0x0241000b01626172617468
(6) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(6) eap_peap:   User-Name = "barath"
(6) Virtual server inner-tunnel received request
(6)   EAP-Message = 0x0241000b01626172617468
(6)   FreeRADIUS-Proxied-To = 127.0.0.1
(6)   User-Name = "barath"
(6) WARNING: Outer and inner identities are the same.  User privacy is compromised.
(6) server inner-tunnel {
(6)   # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(6)     authorize {
(6)       policy filter_username {
(6)         if (&User-Name) {
(6)         if (&User-Name)  -> TRUE
(6)         if (&User-Name)  {
(6)           if (&User-Name =~ / /) {
(6)           if (&User-Name =~ / /)  -> FALSE
(6)           if (&User-Name =~ /@[^@]*@/ ) {
(6)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)           if (&User-Name =~ /\.\./ ) {
(6)           if (&User-Name =~ /\.\./ )  -> FALSE
(6)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)           if (&User-Name =~ /\.$/)  {
(6)           if (&User-Name =~ /\.$/)   -> FALSE
(6)           if (&User-Name =~ /@\./)  {
(6)           if (&User-Name =~ /@\./)   -> FALSE
(6)         } # if (&User-Name)  = notfound
(6)       } # policy filter_username = notfound
(6)       [chap] = noop
(6)       [mschap] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "barath", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)       [suffix] = noop
(6)       update control {
(6)         &Proxy-To-Realm := LOCAL
(6)       } # update control = noop
(6) eap: Peer sent EAP Response (code 2) ID 65 length 11
(6) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(6)       [eap] = ok
(6)     } # authorize = ok
(6)   Found Auth-Type = eap
(6)   # Executing group from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(6)     authenticate {
(6) eap: Peer sent packet with method EAP Identity (1)
(6) eap: Calling submodule eap_mschapv2 to process data
(6) eap_mschapv2: Issuing Challenge
(6) eap: Sending EAP Request (code 1) ID 66 length 43
(6) eap: EAP session adding &reply:State = 0xda3f7866da7d62b5
(6)       [eap] = handled
(6)     } # authenticate = handled
(6) } # server inner-tunnel
(6) Virtual server sending reply
(6)   EAP-Message = 0x0142002b1a01420026106700eef47ae0c019f50e1319201daf43667265657261646975732d332e302e3236
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0xda3f7866da7d62b572b687ec6e793137
(6) eap_peap: Got tunneled reply code 11
(6) eap_peap:   EAP-Message = 0x0142002b1a01420026106700eef47ae0c019f50e1319201daf43667265657261646975732d332e302e3236
(6) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(6) eap_peap:   State = 0xda3f7866da7d62b572b687ec6e793137
(6) eap_peap: Got tunneled reply RADIUS code 11
(6) eap_peap:   EAP-Message = 0x0142002b1a01420026106700eef47ae0c019f50e1319201daf43667265657261646975732d332e302e3236
(6) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(6) eap_peap:   State = 0xda3f7866da7d62b572b687ec6e793137
(6) eap_peap: Got tunneled Access-Challenge
(6) eap: Sending EAP Request (code 1) ID 66 length 74
(6) eap: EAP session adding &reply:State = 0x7503e2707341fb70
(6)     [eap] = handled
(6)   } # authenticate = handled
(6) Using Post-Auth-Type Challenge
(6) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(6)   Challenge { ... } # empty sub-section is ignored
(6) session-state: Saving cached attributes
(6)   Framed-MTU = 994
(6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   TLS-Session-Version = "TLS 1.2"
(6) Sent Access-Challenge Id 6 from 127.0.0.1:1812 to 127.0.0.1:53006 length 132
(6)   EAP-Message = 0x0142004a1900170303003f7edb7c5b9d6582587b64f6900f3b3076024b1b29732b6e8cf05b57c1b2f60b41f565420247b554507ba67403389d51cf4312fe054cf7d947a57201eefb8d69
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0x7503e2707341fb70553b594ff40061b9
(6) Finished request
Waking up in 4.9 seconds.
(7) Received Access-Request Id 7 from 127.0.0.1:53006 to 127.0.0.1:1812 length 232
(7)   User-Name = "barath"
(7)   NAS-IP-Address = 127.0.0.1
(7)   Calling-Station-Id = "02-00-00-00-00-01"
(7)   Framed-MTU = 1400
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   Connect-Info = "CONNECT 11Mbps 802.11b"
(7)   Called-Station-Id = ""
(7)   EAP-Message = 0x0242006019001703030055f1b772b8ed0c18938d220033d3d122468b6a2c4b14be46ebf11d3a6dc026c57fa8a8d9fe2fcac5ce97c4d2b62b262a0887dcb7caa91651a0bda06c86d3f951a61bcc44161d22c52a75afb48494caf0a55b39b36492
(7)   State = 0x7503e2707341fb70553b594ff40061b9
(7)   Message-Authenticator = 0x6c244fe67629551f353821780c291f50
(7) Restoring &session-state
(7)   &session-state:Framed-MTU = 994
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   &session-state:TLS-Session-Version = "TLS 1.2"
(7) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(7)   authorize {
(7)     policy filter_username {
(7)       if (&User-Name) {
(7)       if (&User-Name)  -> TRUE
(7)       if (&User-Name)  {
(7)         if (&User-Name =~ / /) {
(7)         if (&User-Name =~ / /)  -> FALSE
(7)         if (&User-Name =~ /@[^@]*@/ ) {
(7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)         if (&User-Name =~ /\.\./ ) {
(7)         if (&User-Name =~ /\.\./ )  -> FALSE
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)         if (&User-Name =~ /\.$/)  {
(7)         if (&User-Name =~ /\.$/)   -> FALSE
(7)         if (&User-Name =~ /@\./)  {
(7)         if (&User-Name =~ /@\./)   -> FALSE
(7)       } # if (&User-Name)  = notfound
(7)     } # policy filter_username = notfound
(7)     [preprocess] = ok
(7)     [chap] = noop
(7)     [mschap] = noop
(7)     [digest] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "barath", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)     [suffix] = noop
(7) eap: Peer sent EAP Response (code 2) ID 66 length 96
(7) eap: Continuing tunnel setup
(7)     [eap] = ok
(7)   } # authorize = ok
(7) Found Auth-Type = eap
(7) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(7)   authenticate {
(7) eap: Expiring EAP session with state 0xda3f7866da7d62b5
(7) eap: Finished EAP session with state 0x7503e2707341fb70
(7) eap: Previous EAP request found for state 0x7503e2707341fb70, released from the list
(7) eap: Peer sent packet with method EAP PEAP (25)
(7) eap: Calling submodule eap_peap to process data
(7) eap_peap: (TLS) EAP Done initial handshake
(7) eap_peap: Session established.  Decoding tunneled attributes
(7) eap_peap: PEAP state phase2
(7) eap_peap: EAP method MSCHAPv2 (26)
(7) eap_peap: Got tunneled request
(7) eap_peap:   EAP-Message = 0x024200411a0242003c31e3030687d4047efcd8e269d6c8dd4a2a00000000000000009c2be7a7946d6d8c7e9117c87c7960c30360116fb54b369000626172617468
(7) eap_peap: Setting User-Name to barath
(7) eap_peap: Sending tunneled request to inner-tunnel
(7) eap_peap:   EAP-Message = 0x024200411a0242003c31e3030687d4047efcd8e269d6c8dd4a2a00000000000000009c2be7a7946d6d8c7e9117c87c7960c30360116fb54b369000626172617468
(7) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(7) eap_peap:   User-Name = "barath"
(7) eap_peap:   State = 0xda3f7866da7d62b572b687ec6e793137
(7) Virtual server inner-tunnel received request
(7)   EAP-Message = 0x024200411a0242003c31e3030687d4047efcd8e269d6c8dd4a2a00000000000000009c2be7a7946d6d8c7e9117c87c7960c30360116fb54b369000626172617468
(7)   FreeRADIUS-Proxied-To = 127.0.0.1
(7)   User-Name = "barath"
(7)   State = 0xda3f7866da7d62b572b687ec6e793137
(7) WARNING: Outer and inner identities are the same.  User privacy is compromised.
(7) server inner-tunnel {
(7)   session-state: No cached attributes
(7)   # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(7)     authorize {
(7)       policy filter_username {
(7)         if (&User-Name) {
(7)         if (&User-Name)  -> TRUE
(7)         if (&User-Name)  {
(7)           if (&User-Name =~ / /) {
(7)           if (&User-Name =~ / /)  -> FALSE
(7)           if (&User-Name =~ /@[^@]*@/ ) {
(7)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)           if (&User-Name =~ /\.\./ ) {
(7)           if (&User-Name =~ /\.\./ )  -> FALSE
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)           if (&User-Name =~ /\.$/)  {
(7)           if (&User-Name =~ /\.$/)   -> FALSE
(7)           if (&User-Name =~ /@\./)  {
(7)           if (&User-Name =~ /@\./)   -> FALSE
(7)         } # if (&User-Name)  = notfound
(7)       } # policy filter_username = notfound
(7)       [chap] = noop
(7)       [mschap] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "barath", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)       [suffix] = noop
(7)       update control {
(7)         &Proxy-To-Realm := LOCAL
(7)       } # update control = noop
(7) eap: Peer sent EAP Response (code 2) ID 66 length 65
(7) eap: No EAP Start, assuming it's an on-going EAP conversation
(7)       [eap] = updated
(7) files: users: Matched entry barath at line 87
(7) files: EXPAND Hello, %{User-Name}
(7) files:    --> Hello, barath
(7)       [files] = ok
(7) sql: EXPAND %{User-Name}
(7) sql:    --> barath
(7) sql: SQL-User-Name set to 'barath'
rlm_sql (sql): Reserved connection (2)
(7) sql: EXPAND SELECT id, username, attribute, value, op FROM radcheck WHERE username = '%{SQL-User-Name}' ORDER BY id
(7) sql:    --> SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(7) sql: Executing select query: SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(7) sql: WARNING: User not found in radcheck table.
(7) sql: EXPAND SELECT groupname FROM radusergroup WHERE username = '%{SQL-User-Name}' ORDER BY priority
(7) sql:    --> SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(7) sql: Executing select query: SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(7) sql: User not found in any groups
rlm_sql (sql): Released connection (2)
(7)       [sql] = notfound
(7)       [expiration] = noop
(7)       [logintime] = noop
(7) pap: WARNING: Auth-Type already set.  Not setting to PAP
(7)       [pap] = noop
(7)     } # authorize = updated
(7)   Found Auth-Type = eap
(7)   # Executing group from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(7)     authenticate {
(7) eap: Expiring EAP session with state 0xda3f7866da7d62b5
(7) eap: Finished EAP session with state 0xda3f7866da7d62b5
(7) eap: Previous EAP request found for state 0xda3f7866da7d62b5, released from the list
(7) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(7) eap: Calling submodule eap_mschapv2 to process data
(7) eap_mschapv2: # Executing group from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(7) eap_mschapv2:   authenticate {
(7) mschap: Found Cleartext-Password, hashing to create NT-Password
(7) mschap: Creating challenge hash with username: barath
(7) mschap: Client is using MS-CHAPv2
(7) mschap: Adding MS-CHAPv2 MPPE keys
(7) eap_mschapv2:     [mschap] = ok
(7) eap_mschapv2:   } # authenticate = ok
(7) eap_mschapv2: MSCHAP Success
(7) eap: Sending EAP Request (code 1) ID 67 length 51
(7) eap: EAP session adding &reply:State = 0xda3f7866db7c62b5
(7)       [eap] = handled
(7)     } # authenticate = handled
(7) } # server inner-tunnel
(7) Virtual server sending reply
(7)   Reply-Message = "Hello, barath"
(7)   EAP-Message = 0x014300331a0342002e533d41423344374439434541303546423032394130333744354337383430334331363137414342304241
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0xda3f7866db7c62b572b687ec6e793137
(7) eap_peap: Got tunneled reply code 11
(7) eap_peap:   Reply-Message = "Hello, barath"
(7) eap_peap:   EAP-Message = 0x014300331a0342002e533d41423344374439434541303546423032394130333744354337383430334331363137414342304241
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0xda3f7866db7c62b572b687ec6e793137
(7) eap_peap: Got tunneled reply RADIUS code 11
(7) eap_peap:   Reply-Message = "Hello, barath"
(7) eap_peap:   EAP-Message = 0x014300331a0342002e533d41423344374439434541303546423032394130333744354337383430334331363137414342304241
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0xda3f7866db7c62b572b687ec6e793137
(7) eap_peap: Got tunneled Access-Challenge
(7) eap: Sending EAP Request (code 1) ID 67 length 82
(7) eap: EAP session adding &reply:State = 0x7503e2707240fb70
(7)     [eap] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(7)   Challenge { ... } # empty sub-section is ignored
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 994
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   TLS-Session-Version = "TLS 1.2"
(7) Sent Access-Challenge Id 7 from 127.0.0.1:1812 to 127.0.0.1:53006 length 140
(7)   EAP-Message = 0x01430052190017030300477edb7c5b9d658259d40616b88763dfb27b4f0b4ccf218eecd7854870de459f1bc5a54f1d1e36b113f217041346a3269548702e60f92c612ed250137014197c8b365a43687aeb75
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x7503e2707240fb70553b594ff40061b9
(7) Finished request
Waking up in 4.9 seconds.
(8) Received Access-Request Id 8 from 127.0.0.1:53006 to 127.0.0.1:1812 length 173
(8)   User-Name = "barath"
(8)   NAS-IP-Address = 127.0.0.1
(8)   Calling-Station-Id = "02-00-00-00-00-01"
(8)   Framed-MTU = 1400
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   Connect-Info = "CONNECT 11Mbps 802.11b"
(8)   Called-Station-Id = ""
(8)   EAP-Message = 0x024300251900170303001af1b772b8ed0c18943b4a5d22a4ccc7606592454da9ac067db1ee
(8)   State = 0x7503e2707240fb70553b594ff40061b9
(8)   Message-Authenticator = 0x0125672fe362b6576895f84be374faec
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 994
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   &session-state:TLS-Session-Version = "TLS 1.2"
(8) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(8)   authorize {
(8)     policy filter_username {
(8)       if (&User-Name) {
(8)       if (&User-Name)  -> TRUE
(8)       if (&User-Name)  {
(8)         if (&User-Name =~ / /) {
(8)         if (&User-Name =~ / /)  -> FALSE
(8)         if (&User-Name =~ /@[^@]*@/ ) {
(8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)         if (&User-Name =~ /\.\./ ) {
(8)         if (&User-Name =~ /\.\./ )  -> FALSE
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)         if (&User-Name =~ /\.$/)  {
(8)         if (&User-Name =~ /\.$/)   -> FALSE
(8)         if (&User-Name =~ /@\./)  {
(8)         if (&User-Name =~ /@\./)   -> FALSE
(8)       } # if (&User-Name)  = notfound
(8)     } # policy filter_username = notfound
(8)     [preprocess] = ok
(8)     [chap] = noop
(8)     [mschap] = noop
(8)     [digest] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "barath", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)     [suffix] = noop
(8) eap: Peer sent EAP Response (code 2) ID 67 length 37
(8) eap: Continuing tunnel setup
(8)     [eap] = ok
(8)   } # authorize = ok
(8) Found Auth-Type = eap
(8) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(8)   authenticate {
(8) eap: Expiring EAP session with state 0xda3f7866db7c62b5
(8) eap: Finished EAP session with state 0x7503e2707240fb70
(8) eap: Previous EAP request found for state 0x7503e2707240fb70, released from the list
(8) eap: Peer sent packet with method EAP PEAP (25)
(8) eap: Calling submodule eap_peap to process data
(8) eap_peap: (TLS) EAP Done initial handshake
(8) eap_peap: Session established.  Decoding tunneled attributes
(8) eap_peap: PEAP state phase2
(8) eap_peap: EAP method MSCHAPv2 (26)
(8) eap_peap: Got tunneled request
(8) eap_peap:   EAP-Message = 0x024300061a03
(8) eap_peap: Setting User-Name to barath
(8) eap_peap: Sending tunneled request to inner-tunnel
(8) eap_peap:   EAP-Message = 0x024300061a03
(8) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(8) eap_peap:   User-Name = "barath"
(8) eap_peap:   State = 0xda3f7866db7c62b572b687ec6e793137
(8) Virtual server inner-tunnel received request
(8)   EAP-Message = 0x024300061a03
(8)   FreeRADIUS-Proxied-To = 127.0.0.1
(8)   User-Name = "barath"
(8)   State = 0xda3f7866db7c62b572b687ec6e793137
(8) WARNING: Outer and inner identities are the same.  User privacy is compromised.
(8) server inner-tunnel {
(8)   session-state: No cached attributes
(8)   # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(8)     authorize {
(8)       policy filter_username {
(8)         if (&User-Name) {
(8)         if (&User-Name)  -> TRUE
(8)         if (&User-Name)  {
(8)           if (&User-Name =~ / /) {
(8)           if (&User-Name =~ / /)  -> FALSE
(8)           if (&User-Name =~ /@[^@]*@/ ) {
(8)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)           if (&User-Name =~ /\.\./ ) {
(8)           if (&User-Name =~ /\.\./ )  -> FALSE
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)           if (&User-Name =~ /\.$/)  {
(8)           if (&User-Name =~ /\.$/)   -> FALSE
(8)           if (&User-Name =~ /@\./)  {
(8)           if (&User-Name =~ /@\./)   -> FALSE
(8)         } # if (&User-Name)  = notfound
(8)       } # policy filter_username = notfound
(8)       [chap] = noop
(8)       [mschap] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "barath", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)       [suffix] = noop
(8)       update control {
(8)         &Proxy-To-Realm := LOCAL
(8)       } # update control = noop
(8) eap: Peer sent EAP Response (code 2) ID 67 length 6
(8) eap: No EAP Start, assuming it's an on-going EAP conversation
(8)       [eap] = updated
(8) files: users: Matched entry barath at line 87
(8) files: EXPAND Hello, %{User-Name}
(8) files:    --> Hello, barath
(8)       [files] = ok
(8) sql: EXPAND %{User-Name}
(8) sql:    --> barath
(8) sql: SQL-User-Name set to 'barath'
rlm_sql (sql): Reserved connection (3)
(8) sql: EXPAND SELECT id, username, attribute, value, op FROM radcheck WHERE username = '%{SQL-User-Name}' ORDER BY id
(8) sql:    --> SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(8) sql: Executing select query: SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(8) sql: WARNING: User not found in radcheck table.
(8) sql: EXPAND SELECT groupname FROM radusergroup WHERE username = '%{SQL-User-Name}' ORDER BY priority
(8) sql:    --> SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(8) sql: Executing select query: SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(8) sql: User not found in any groups
rlm_sql (sql): Released connection (3)
(8)       [sql] = notfound
(8)       [expiration] = noop
(8)       [logintime] = noop
(8) pap: WARNING: Auth-Type already set.  Not setting to PAP
(8)       [pap] = noop
(8)     } # authorize = updated
(8)   Found Auth-Type = eap
(8)   # Executing group from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(8)     authenticate {
(8) eap: Expiring EAP session with state 0xda3f7866db7c62b5
(8) eap: Finished EAP session with state 0xda3f7866db7c62b5
(8) eap: Previous EAP request found for state 0xda3f7866db7c62b5, released from the list
(8) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(8) eap: Calling submodule eap_mschapv2 to process data
(8) eap: Sending EAP Success (code 3) ID 67 length 4
(8) eap: Freeing handler
(8)       [eap] = ok
(8)     } # authenticate = ok
(8)   # Executing section post-auth from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(8)     post-auth {
(8) sql: EXPAND .query
(8) sql:    --> .query
(8) sql: Using query template 'query'
rlm_sql (sql): Reserved connection (4)
(8) sql: EXPAND %{User-Name}
(8) sql:    --> barath
(8) sql: SQL-User-Name set to 'barath'
(8) sql: EXPAND INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( '%{SQL-User-Name}', '%{%{User-Password}:-%{Chap-Password}}', '%{reply:Packet-Type}', '%S.%M' )
(8) sql:    --> INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( 'barath', '', 'Access-Accept', '2024-06-13 16:29:56.279276' )
(8) sql: Executing query: INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( 'barath', '', 'Access-Accept', '2024-06-13 16:29:56.279276' )
(8) sql: SQL query returned: success
(8) sql: 1 record(s) updated
rlm_sql (sql): Released connection (4)
(8)       [sql] = ok
(8)       if (0) {
(8)       if (0)  -> FALSE
(8)     } # post-auth = ok
(8) } # server inner-tunnel
(8) Virtual server sending reply
(8)   Reply-Message = "Hello, barath"
(8)   MS-MPPE-Encryption-Policy = Encryption-Allowed
(8)   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(8)   MS-MPPE-Send-Key = 0xc66e1791ccc5e2b796aeefd7d2ac4229
(8)   MS-MPPE-Recv-Key = 0xecce861fe8f96999668f79e01131a25e
(8)   EAP-Message = 0x03430004
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   User-Name = "barath"
(8) eap_peap: Got tunneled reply code 2
(8) eap_peap:   Reply-Message = "Hello, barath"
(8) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(8) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(8) eap_peap:   MS-MPPE-Send-Key = 0xc66e1791ccc5e2b796aeefd7d2ac4229
(8) eap_peap:   MS-MPPE-Recv-Key = 0xecce861fe8f96999668f79e01131a25e
(8) eap_peap:   EAP-Message = 0x03430004
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   User-Name = "barath"
(8) eap_peap: Got tunneled reply RADIUS code 2
(8) eap_peap:   Reply-Message = "Hello, barath"
(8) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(8) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(8) eap_peap:   MS-MPPE-Send-Key = 0xc66e1791ccc5e2b796aeefd7d2ac4229
(8) eap_peap:   MS-MPPE-Recv-Key = 0xecce861fe8f96999668f79e01131a25e
(8) eap_peap:   EAP-Message = 0x03430004
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   User-Name = "barath"
(8) eap_peap: Tunneled authentication was successful
(8) eap_peap: SUCCESS
(8) eap_peap: Saving tunneled attributes for later
(8) eap: Sending EAP Request (code 1) ID 68 length 46
(8) eap: EAP session adding &reply:State = 0x7503e2707d47fb70
(8)     [eap] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(8)   Challenge { ... } # empty sub-section is ignored
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 994
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   TLS-Session-Version = "TLS 1.2"
(8) Sent Access-Challenge Id 8 from 127.0.0.1:1812 to 127.0.0.1:53006 length 104
(8)   EAP-Message = 0x0144002e190017030300237edb7c5b9d65825a1dd8c51dbaac7cc1a43edfa82b90ad49afad969f1497f42a4a5a8e
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x7503e2707d47fb70553b594ff40061b9
(8) Finished request
Waking up in 4.9 seconds.
(9) Received Access-Request Id 9 from 127.0.0.1:53006 to 127.0.0.1:1812 length 182
(9)   User-Name = "barath"
(9)   NAS-IP-Address = 127.0.0.1
(9)   Calling-Station-Id = "02-00-00-00-00-01"
(9)   Framed-MTU = 1400
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   Connect-Info = "CONNECT 11Mbps 802.11b"
(9)   Called-Station-Id = ""
(9)   EAP-Message = 0x0244002e19001703030023f1b772b8ed0c1895ccd1f1dc1ce05d105aabbb2395b1c0ddfec40aebbdf56145334e07
(9)   State = 0x7503e2707d47fb70553b594ff40061b9
(9)   Message-Authenticator = 0x431b6055c2b0db053fbc77814c859362
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 994
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   &session-state:TLS-Session-Version = "TLS 1.2"
(9) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(9)   authorize {
(9)     policy filter_username {
(9)       if (&User-Name) {
(9)       if (&User-Name)  -> TRUE
(9)       if (&User-Name)  {
(9)         if (&User-Name =~ / /) {
(9)         if (&User-Name =~ / /)  -> FALSE
(9)         if (&User-Name =~ /@[^@]*@/ ) {
(9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)         if (&User-Name =~ /\.\./ ) {
(9)         if (&User-Name =~ /\.\./ )  -> FALSE
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)         if (&User-Name =~ /\.$/)  {
(9)         if (&User-Name =~ /\.$/)   -> FALSE
(9)         if (&User-Name =~ /@\./)  {
(9)         if (&User-Name =~ /@\./)   -> FALSE
(9)       } # if (&User-Name)  = notfound
(9)     } # policy filter_username = notfound
(9)     [preprocess] = ok
(9)     [chap] = noop
(9)     [mschap] = noop
(9)     [digest] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: No '@' in User-Name = "barath", looking up realm NULL
(9) suffix: No such realm "NULL"
(9)     [suffix] = noop
(9) eap: Peer sent EAP Response (code 2) ID 68 length 46
(9) eap: Continuing tunnel setup
(9)     [eap] = ok
(9)   } # authorize = ok
(9) Found Auth-Type = eap
(9) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(9)   authenticate {
(9) eap: Expiring EAP session with state 0x7503e2707d47fb70
(9) eap: Finished EAP session with state 0x7503e2707d47fb70
(9) eap: Previous EAP request found for state 0x7503e2707d47fb70, released from the list
(9) eap: Peer sent packet with method EAP PEAP (25)
(9) eap: Calling submodule eap_peap to process data
(9) eap_peap: (TLS) EAP Done initial handshake
(9) eap_peap: Session established.  Decoding tunneled attributes
(9) eap_peap: PEAP state send tlv success
(9) eap_peap: Received EAP-TLV response
(9) eap_peap: Success
(9) eap_peap: Using saved attributes from the original Access-Accept
(9) eap_peap:   Reply-Message = "Hello, barath"
(9) eap_peap:   User-Name = "barath"
(9) eap: Sending EAP Success (code 3) ID 68 length 4
(9) eap: Freeing handler
(9)     [eap] = ok
(9)   } # authenticate = ok
(9) # Executing section post-auth from file /etc/freeradius/3.0/sites-enabled/default
(9)   post-auth {
(9)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(9)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(9)     update {
(9)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(9)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(9)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(9)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(9)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(9)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(9)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(9)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(9)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(9)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(9)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(9)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(9)     } # update = noop
(9) sql: EXPAND .query
(9) sql:    --> .query
(9) sql: Using query template 'query'
rlm_sql (sql): Reserved connection (0)
(9) sql: EXPAND %{User-Name}
(9) sql:    --> barath
(9) sql: SQL-User-Name set to 'barath'
(9) sql: EXPAND INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( '%{SQL-User-Name}', '%{%{User-Password}:-%{Chap-Password}}', '%{reply:Packet-Type}', '%S.%M' )
(9) sql:    --> INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( 'barath', '', 'Access-Accept', '2024-06-13 16:29:56.281572' )
(9) sql: Executing query: INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( 'barath', '', 'Access-Accept', '2024-06-13 16:29:56.281572' )
(9) sql: SQL query returned: success
(9) sql: 1 record(s) updated
rlm_sql (sql): Released connection (0)
(9)     [sql] = ok
(9)     [exec] = noop
(9)     policy remove_reply_message_if_eap {
(9)       if (&reply:EAP-Message && &reply:Reply-Message) {
(9)       if (&reply:EAP-Message && &reply:Reply-Message)  -> TRUE
(9)       if (&reply:EAP-Message && &reply:Reply-Message)  {
(9)         update reply {
(9)           &Reply-Message !* ANY
(9)         } # update reply = noop
(9)       } # if (&reply:EAP-Message && &reply:Reply-Message)  = noop
(9)       ... skipping else: Preceding "if" was taken
(9)     } # policy remove_reply_message_if_eap = noop
(9)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(9)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(9)   } # post-auth = ok
(9) Sent Access-Accept Id 9 from 127.0.0.1:1812 to 127.0.0.1:53006 length 174
(9)   User-Name = "barath"
(9)   MS-MPPE-Recv-Key = 0x4a436a410448fef3400b71f700353af2925eb70296b2a16dcf3eed7f28fd712c
(9)   MS-MPPE-Send-Key = 0x69b55757c33b17a5590a36538e3f74539509d8e5d6887b566943a2b31f641144
(9)   EAP-Message = 0x03440004
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   Framed-MTU += 994
(9) Finished request
Waking up in 4.9 seconds.
(0) Cleaning up request packet ID 0 with timestamp +6 due to cleanup_delay was reached
(1) Cleaning up request packet ID 1 with timestamp +6 due to cleanup_delay was reached
(2) Cleaning up request packet ID 2 with timestamp +6 due to cleanup_delay was reached
(3) Cleaning up request packet ID 3 with timestamp +6 due to cleanup_delay was reached
(4) Cleaning up request packet ID 4 with timestamp +6 due to cleanup_delay was reached
(5) Cleaning up request packet ID 5 with timestamp +6 due to cleanup_delay was reached
(6) Cleaning up request packet ID 6 with timestamp +6 due to cleanup_delay was reached
(7) Cleaning up request packet ID 7 with timestamp +6 due to cleanup_delay was reached
(8) Cleaning up request packet ID 8 with timestamp +6 due to cleanup_delay was reached
(9) Cleaning up request packet ID 9 with timestamp +6 due to cleanup_delay was reached
Ready to process requests
(10) Received Access-Request Id 0 from 127.0.0.1:40495 to 127.0.0.1:1812 length 129
(10)   User-Name = "barath"
(10)   NAS-IP-Address = 127.0.0.1
(10)   Calling-Station-Id = "02-00-00-00-00-01"
(10)   Framed-MTU = 1400
(10)   NAS-Port-Type = Wireless-802.11
(10)   Service-Type = Framed-User
(10)   Connect-Info = "CONNECT 11Mbps 802.11b"
(10)   Called-Station-Id = ""
(10)   EAP-Message = 0x0242000b01626172617468
(10)   Message-Authenticator = 0x325ec4a5a019bc1adc6399250294e86c
(10) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(10)   authorize {
(10)     policy filter_username {
(10)       if (&User-Name) {
(10)       if (&User-Name)  -> TRUE
(10)       if (&User-Name)  {
(10)         if (&User-Name =~ / /) {
(10)         if (&User-Name =~ / /)  -> FALSE
(10)         if (&User-Name =~ /@[^@]*@/ ) {
(10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(10)         if (&User-Name =~ /\.\./ ) {
(10)         if (&User-Name =~ /\.\./ )  -> FALSE
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(10)         if (&User-Name =~ /\.$/)  {
(10)         if (&User-Name =~ /\.$/)   -> FALSE
(10)         if (&User-Name =~ /@\./)  {
(10)         if (&User-Name =~ /@\./)   -> FALSE
(10)       } # if (&User-Name)  = notfound
(10)     } # policy filter_username = notfound
(10)     [preprocess] = ok
(10)     [chap] = noop
(10)     [mschap] = noop
(10)     [digest] = noop
(10) suffix: Checking for suffix after "@"
(10) suffix: No '@' in User-Name = "barath", looking up realm NULL
(10) suffix: No such realm "NULL"
(10)     [suffix] = noop
(10) eap: Peer sent EAP Response (code 2) ID 66 length 11
(10) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(10)     [eap] = ok
(10)   } # authorize = ok
(10) Found Auth-Type = eap
(10) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(10)   authenticate {
(10) eap: Peer sent packet with method EAP Identity (1)
(10) eap: Calling submodule eap_md5 to process data
(10) eap_md5: Issuing MD5 Challenge
(10) eap: Sending EAP Request (code 1) ID 67 length 22
(10) eap: EAP session adding &reply:State = 0x045eb233041db69d
(10)     [eap] = handled
(10)   } # authenticate = handled
(10) Using Post-Auth-Type Challenge
(10) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(10)   Challenge { ... } # empty sub-section is ignored
(10) Sent Access-Challenge Id 0 from 127.0.0.1:1812 to 127.0.0.1:40495 length 80
(10)   EAP-Message = 0x014300160410decf2c393e95ff8054441eae35f8472a
(10)   Message-Authenticator = 0x00000000000000000000000000000000
(10)   State = 0x045eb233041db69d3ec910cea4cee2dc
(10) Finished request
Waking up in 4.9 seconds.
(11) Received Access-Request Id 1 from 127.0.0.1:40495 to 127.0.0.1:1812 length 142
(11)   User-Name = "barath"
(11)   NAS-IP-Address = 127.0.0.1
(11)   Calling-Station-Id = "02-00-00-00-00-01"
(11)   Framed-MTU = 1400
(11)   NAS-Port-Type = Wireless-802.11
(11)   Service-Type = Framed-User
(11)   Connect-Info = "CONNECT 11Mbps 802.11b"
(11)   Called-Station-Id = ""
(11)   EAP-Message = 0x024300060319
(11)   State = 0x045eb233041db69d3ec910cea4cee2dc
(11)   Message-Authenticator = 0x9ebb0f60652f2c02ffcd5a2c10c5af17
(11) session-state: No cached attributes
(11) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(11)   authorize {
(11)     policy filter_username {
(11)       if (&User-Name) {
(11)       if (&User-Name)  -> TRUE
(11)       if (&User-Name)  {
(11)         if (&User-Name =~ / /) {
(11)         if (&User-Name =~ / /)  -> FALSE
(11)         if (&User-Name =~ /@[^@]*@/ ) {
(11)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(11)         if (&User-Name =~ /\.\./ ) {
(11)         if (&User-Name =~ /\.\./ )  -> FALSE
(11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(11)         if (&User-Name =~ /\.$/)  {
(11)         if (&User-Name =~ /\.$/)   -> FALSE
(11)         if (&User-Name =~ /@\./)  {
(11)         if (&User-Name =~ /@\./)   -> FALSE
(11)       } # if (&User-Name)  = notfound
(11)     } # policy filter_username = notfound
(11)     [preprocess] = ok
(11)     [chap] = noop
(11)     [mschap] = noop
(11)     [digest] = noop
(11) suffix: Checking for suffix after "@"
(11) suffix: No '@' in User-Name = "barath", looking up realm NULL
(11) suffix: No such realm "NULL"
(11)     [suffix] = noop
(11) eap: Peer sent EAP Response (code 2) ID 67 length 6
(11) eap: No EAP Start, assuming it's an on-going EAP conversation
(11)     [eap] = updated
(11) files: users: Matched entry barath at line 87
(11) files: EXPAND Hello, %{User-Name}
(11) files:    --> Hello, barath
(11)     [files] = ok
(11) sql: EXPAND %{User-Name}
(11) sql:    --> barath
(11) sql: SQL-User-Name set to 'barath'
rlm_sql (sql): Reserved connection (5)
(11) sql: EXPAND SELECT id, username, attribute, value, op FROM radcheck WHERE username = '%{SQL-User-Name}' ORDER BY id
(11) sql:    --> SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(11) sql: Executing select query: SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(11) sql: WARNING: User not found in radcheck table.
(11) sql: EXPAND SELECT groupname FROM radusergroup WHERE username = '%{SQL-User-Name}' ORDER BY priority
(11) sql:    --> SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(11) sql: Executing select query: SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(11) sql: User not found in any groups
rlm_sql (sql): Released connection (5)
Need more connections to reach 10 spares
rlm_sql (sql): Opening additional connection (7), 1 of 25 pending slots used
rlm_sql_mysql: Starting connect to MySQL server
WARNING: MYSQL_OPT_RECONNECT is deprecated and will be removed in a future version.
rlm_sql_mysql: Connected to database 'radius' on Localhost via UNIX socket, server version 5.5.5-10.6.16-MariaDB-0ubuntu0.22.04.1, protocol version 10
rlm_sql (sql): Closing expired connection (6) - Hit idle_timeout limit
rlm_sql_mysql: Socket destructor called, closing socket
rlm_sql (sql): Closing expired connection (4) - Hit idle_timeout limit
rlm_sql_mysql: Socket destructor called, closing socket
rlm_sql (sql): Closing expired connection (3) - Hit idle_timeout limit
rlm_sql_mysql: Socket destructor called, closing socket
rlm_sql (sql): Closing expired connection (2) - Hit idle_timeout limit
rlm_sql_mysql: Socket destructor called, closing socket
rlm_sql (sql): Closing expired connection (1) - Hit idle_timeout limit
rlm_sql_mysql: Socket destructor called, closing socket
rlm_sql (sql): You probably need to lower "min"
rlm_sql (sql): Closing expired connection (0) - Hit idle_timeout limit
rlm_sql_mysql: Socket destructor called, closing socket
(11)     [sql] = notfound
(11)     [expiration] = noop
(11)     [logintime] = noop
(11) pap: WARNING: Auth-Type already set.  Not setting to PAP
(11)     [pap] = noop
(11)   } # authorize = updated
(11) Found Auth-Type = eap
(11) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(11)   authenticate {
(11) eap: Expiring EAP session with state 0x045eb233041db69d
(11) eap: Finished EAP session with state 0x045eb233041db69d
(11) eap: Previous EAP request found for state 0x045eb233041db69d, released from the list
(11) eap: Peer sent packet with method EAP NAK (3)
(11) eap: Found mutually acceptable type PEAP (25)
(11) eap: Calling submodule eap_peap to process data
(11) eap_peap: (TLS) Initiating new session
(11) eap: Sending EAP Request (code 1) ID 68 length 6
(11) eap: EAP session adding &reply:State = 0x045eb233051aab9d
(11)     [eap] = handled
(11)   } # authenticate = handled
(11) Using Post-Auth-Type Challenge
(11) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(11)   Challenge { ... } # empty sub-section is ignored
(11) session-state: Saving cached attributes
(11)   Framed-MTU = 994
(11) Sent Access-Challenge Id 1 from 127.0.0.1:1812 to 127.0.0.1:40495 length 79
(11)   Reply-Message = "Hello, barath"
(11)   EAP-Message = 0x014400061920
(11)   Message-Authenticator = 0x00000000000000000000000000000000
(11)   State = 0x045eb233051aab9d3ec910cea4cee2dc
(11) Finished request
Waking up in 4.9 seconds.
(12) Received Access-Request Id 2 from 127.0.0.1:40495 to 127.0.0.1:1812 length 330
(12)   User-Name = "barath"
(12)   NAS-IP-Address = 127.0.0.1
(12)   Calling-Station-Id = "02-00-00-00-00-01"
(12)   Framed-MTU = 1400
(12)   NAS-Port-Type = Wireless-802.11
(12)   Service-Type = Framed-User
(12)   Connect-Info = "CONNECT 11Mbps 802.11b"
(12)   Called-Station-Id = ""
(12)   EAP-Message = 0x024400c21980000000b816030100b3010000af0303124f676b0bbdbb4a6f5bd7cc499f327fd494ed8736490193308a1aee9a956a48000038c02cc030009fcca9cca8ccaac02bc02f009ec024c028006bc023c0270067c00ac0140039c009c0130033009d009c003d003c0035002f00ff0100004e000b000403000102000a000c000a001d0017001e001900180016000000170000000d002a0028040305030603080708080809080a080b080408050806040105010601030303010302040205020602
(12)   State = 0x045eb233051aab9d3ec910cea4cee2dc
(12)   Message-Authenticator = 0x860b76f370cb3b8e436c17cc2b4c3de1
(12) Restoring &session-state
(12)   &session-state:Framed-MTU = 994
(12) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(12)   authorize {
(12)     policy filter_username {
(12)       if (&User-Name) {
(12)       if (&User-Name)  -> TRUE
(12)       if (&User-Name)  {
(12)         if (&User-Name =~ / /) {
(12)         if (&User-Name =~ / /)  -> FALSE
(12)         if (&User-Name =~ /@[^@]*@/ ) {
(12)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(12)         if (&User-Name =~ /\.\./ ) {
(12)         if (&User-Name =~ /\.\./ )  -> FALSE
(12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(12)         if (&User-Name =~ /\.$/)  {
(12)         if (&User-Name =~ /\.$/)   -> FALSE
(12)         if (&User-Name =~ /@\./)  {
(12)         if (&User-Name =~ /@\./)   -> FALSE
(12)       } # if (&User-Name)  = notfound
(12)     } # policy filter_username = notfound
(12)     [preprocess] = ok
(12)     [chap] = noop
(12)     [mschap] = noop
(12)     [digest] = noop
(12) suffix: Checking for suffix after "@"
(12) suffix: No '@' in User-Name = "barath", looking up realm NULL
(12) suffix: No such realm "NULL"
(12)     [suffix] = noop
(12) eap: Peer sent EAP Response (code 2) ID 68 length 194
(12) eap: Continuing tunnel setup
(12)     [eap] = ok
(12)   } # authorize = ok
(12) Found Auth-Type = eap
(12) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(12)   authenticate {
(12) eap: Expiring EAP session with state 0x045eb233051aab9d
(12) eap: Finished EAP session with state 0x045eb233051aab9d
(12) eap: Previous EAP request found for state 0x045eb233051aab9d, released from the list
(12) eap: Peer sent packet with method EAP PEAP (25)
(12) eap: Calling submodule eap_peap to process data
(12) eap_peap: (TLS) EAP Peer says that the final record size will be 184 bytes
(12) eap_peap: (TLS) EAP Got all data (184 bytes)
(12) eap_peap: (TLS) Handshake state - before SSL initialization
(12) eap_peap: (TLS) Handshake state - Server before SSL initialization
(12) eap_peap: (TLS) Handshake state - Server before SSL initialization
(12) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(12) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(12) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(12) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(12) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(12) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(12) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(12) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(12) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(12) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(12) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(12) eap_peap: (TLS) In Handshake Phase
(12) eap: Sending EAP Request (code 1) ID 69 length 1004
(12) eap: EAP session adding &reply:State = 0x045eb233061bab9d
(12)     [eap] = handled
(12)   } # authenticate = handled
(12) Using Post-Auth-Type Challenge
(12) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(12)   Challenge { ... } # empty sub-section is ignored
(12) session-state: Saving cached attributes
(12)   Framed-MTU = 994
(12)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(12) Sent Access-Challenge Id 2 from 127.0.0.1:1812 to 127.0.0.1:40495 length 1068
(12)   EAP-Message = 0x014503ec19c00000047e160303003d020000390303744647091fa3862dcd39d8beb2537631b4562f9fb7917607a16e91b4f7f507ab00c030000011ff01000100000b0004030001020017000016030302fd0b0002f90002f60002f3308202ef308201d7a00302010202142f416a9bb38485c6c9da5c02142a5a5a3f8127ad300d06092a864886f70d01010b05003011310f300d06035504030c067562756e7475301e170d3234303232343135353430305a170d3334303232313135353430305a3011310f300d06035504030c067562756e747530820122300d06092a864886f70d01010105000382010f003082010a0282010100a526c88050efc9906ac6b937b09dfc3ac8bb1bfb18b2c7c28c4c3b09a320819dc05c516a8798c815a033584625873e99a3630fa83c99a05ac08de4f178ed9fc32d8a43023163b47054b1cd778ad278851bbc03c95e93a8ca37edf2e40f1ad9bfae053ac1d91842f906da9243d501309e2bcb408bbcf0ba3a5af30e7315d9e59e212123
(12)   Message-Authenticator = 0x00000000000000000000000000000000
(12)   State = 0x045eb233061bab9d3ec910cea4cee2dc
(12) Finished request
Waking up in 4.9 seconds.
(13) Received Access-Request Id 3 from 127.0.0.1:40495 to 127.0.0.1:1812 length 142
(13)   User-Name = "barath"
(13)   NAS-IP-Address = 127.0.0.1
(13)   Calling-Station-Id = "02-00-00-00-00-01"
(13)   Framed-MTU = 1400
(13)   NAS-Port-Type = Wireless-802.11
(13)   Service-Type = Framed-User
(13)   Connect-Info = "CONNECT 11Mbps 802.11b"
(13)   Called-Station-Id = ""
(13)   EAP-Message = 0x024500061900
(13)   State = 0x045eb233061bab9d3ec910cea4cee2dc
(13)   Message-Authenticator = 0xcafb274c24f58f4081d6bc1df5fa9d78
(13) Restoring &session-state
(13)   &session-state:Framed-MTU = 994
(13)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(13) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(13)   authorize {
(13)     policy filter_username {
(13)       if (&User-Name) {
(13)       if (&User-Name)  -> TRUE
(13)       if (&User-Name)  {
(13)         if (&User-Name =~ / /) {
(13)         if (&User-Name =~ / /)  -> FALSE
(13)         if (&User-Name =~ /@[^@]*@/ ) {
(13)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(13)         if (&User-Name =~ /\.\./ ) {
(13)         if (&User-Name =~ /\.\./ )  -> FALSE
(13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(13)         if (&User-Name =~ /\.$/)  {
(13)         if (&User-Name =~ /\.$/)   -> FALSE
(13)         if (&User-Name =~ /@\./)  {
(13)         if (&User-Name =~ /@\./)   -> FALSE
(13)       } # if (&User-Name)  = notfound
(13)     } # policy filter_username = notfound
(13)     [preprocess] = ok
(13)     [chap] = noop
(13)     [mschap] = noop
(13)     [digest] = noop
(13) suffix: Checking for suffix after "@"
(13) suffix: No '@' in User-Name = "barath", looking up realm NULL
(13) suffix: No such realm "NULL"
(13)     [suffix] = noop
(13) eap: Peer sent EAP Response (code 2) ID 69 length 6
(13) eap: Continuing tunnel setup
(13)     [eap] = ok
(13)   } # authorize = ok
(13) Found Auth-Type = eap
(13) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(13)   authenticate {
(13) eap: Expiring EAP session with state 0x045eb233061bab9d
(13) eap: Finished EAP session with state 0x045eb233061bab9d
(13) eap: Previous EAP request found for state 0x045eb233061bab9d, released from the list
(13) eap: Peer sent packet with method EAP PEAP (25)
(13) eap: Calling submodule eap_peap to process data
(13) eap_peap: (TLS) Peer ACKed our handshake fragment
(13) eap: Sending EAP Request (code 1) ID 70 length 162
(13) eap: EAP session adding &reply:State = 0x045eb2330718ab9d
(13)     [eap] = handled
(13)   } # authenticate = handled
(13) Using Post-Auth-Type Challenge
(13) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(13)   Challenge { ... } # empty sub-section is ignored
(13) session-state: Saving cached attributes
(13)   Framed-MTU = 994
(13)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(13) Sent Access-Challenge Id 3 from 127.0.0.1:1812 to 127.0.0.1:40495 length 220
(13)   EAP-Message = 0x014600a219003e3e8761483d3ebce32340c5a5542d025aa3f445c55a44162dc1536f4b55579bb22bc6857ae27ac20d81618c32571988d98bc79fee11972a7e3fb307cd724b2876a3c0a2648da6e2b8a45368da32685cc2ffc28afc8471db76c3b3413f98ffac180a13509feda1d821078ac810a4822ca84a831ad54739cf91710656384da0da83df305425d1d5858c4e7c784942e9df47e9fb16030300040e000000
(13)   Message-Authenticator = 0x00000000000000000000000000000000
(13)   State = 0x045eb2330718ab9d3ec910cea4cee2dc
(13) Finished request
Waking up in 4.9 seconds.
(14) Received Access-Request Id 4 from 127.0.0.1:40495 to 127.0.0.1:1812 length 239
(14)   User-Name = "barath"
(14)   NAS-IP-Address = 127.0.0.1
(14)   Calling-Station-Id = "02-00-00-00-00-01"
(14)   Framed-MTU = 1400
(14)   NAS-Port-Type = Wireless-802.11
(14)   Service-Type = Framed-User
(14)   Connect-Info = "CONNECT 11Mbps 802.11b"
(14)   Called-Station-Id = ""
(14)   EAP-Message = 0x0246006719800000005d16030300251000002120071c5ed9854933ce9e0afe73d7c40a38512149463068d90dccbe3d7fa13b254f1403030001011603030028fbc60bfc3888652734e8f903c8208f1c14d41a8b8fcff3b05f93ba6895599ac770c3fc9e444584f3
(14)   State = 0x045eb2330718ab9d3ec910cea4cee2dc
(14)   Message-Authenticator = 0x70c4880606791e0879310cbaf06473a7
(14) Restoring &session-state
(14)   &session-state:Framed-MTU = 994
(14)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(14) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(14)   authorize {
(14)     policy filter_username {
(14)       if (&User-Name) {
(14)       if (&User-Name)  -> TRUE
(14)       if (&User-Name)  {
(14)         if (&User-Name =~ / /) {
(14)         if (&User-Name =~ / /)  -> FALSE
(14)         if (&User-Name =~ /@[^@]*@/ ) {
(14)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(14)         if (&User-Name =~ /\.\./ ) {
(14)         if (&User-Name =~ /\.\./ )  -> FALSE
(14)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(14)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(14)         if (&User-Name =~ /\.$/)  {
(14)         if (&User-Name =~ /\.$/)   -> FALSE
(14)         if (&User-Name =~ /@\./)  {
(14)         if (&User-Name =~ /@\./)   -> FALSE
(14)       } # if (&User-Name)  = notfound
(14)     } # policy filter_username = notfound
(14)     [preprocess] = ok
(14)     [chap] = noop
(14)     [mschap] = noop
(14)     [digest] = noop
(14) suffix: Checking for suffix after "@"
(14) suffix: No '@' in User-Name = "barath", looking up realm NULL
(14) suffix: No such realm "NULL"
(14)     [suffix] = noop
(14) eap: Peer sent EAP Response (code 2) ID 70 length 103
(14) eap: Continuing tunnel setup
(14)     [eap] = ok
(14)   } # authorize = ok
(14) Found Auth-Type = eap
(14) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(14)   authenticate {
(14) eap: Expiring EAP session with state 0x045eb2330718ab9d
(14) eap: Finished EAP session with state 0x045eb2330718ab9d
(14) eap: Previous EAP request found for state 0x045eb2330718ab9d, released from the list
(14) eap: Peer sent packet with method EAP PEAP (25)
(14) eap: Calling submodule eap_peap to process data
(14) eap_peap: (TLS) EAP Peer says that the final record size will be 93 bytes
(14) eap_peap: (TLS) EAP Got all data (93 bytes)
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(14) eap_peap: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(14) eap_peap: (TLS) recv TLS 1.2 Handshake, Finished
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read finished
(14) eap_peap: (TLS) send TLS 1.2 ChangeCipherSpec
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(14) eap_peap: (TLS) send TLS 1.2 Handshake, Finished
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write finished
(14) eap_peap: (TLS) Handshake state - SSL negotiation finished successfully
(14) eap_peap: (TLS) Connection Established
(14) eap_peap:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(14) eap_peap:   TLS-Session-Version = "TLS 1.2"
(14) eap: Sending EAP Request (code 1) ID 71 length 57
(14) eap: EAP session adding &reply:State = 0x045eb2330019ab9d
(14)     [eap] = handled
(14)   } # authenticate = handled
(14) Using Post-Auth-Type Challenge
(14) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(14)   Challenge { ... } # empty sub-section is ignored
(14) session-state: Saving cached attributes
(14)   Framed-MTU = 994
(14)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(14)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(14)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(14)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(14)   TLS-Session-Version = "TLS 1.2"
(14) Sent Access-Challenge Id 4 from 127.0.0.1:1812 to 127.0.0.1:40495 length 115
(14)   EAP-Message = 0x014700391900140303000101160303002893c1d69ab80d9225f468cf540ef9d13674d43110075d823eaa953277bd7dc00fffe4dc7f42fbb326
(14)   Message-Authenticator = 0x00000000000000000000000000000000
(14)   State = 0x045eb2330019ab9d3ec910cea4cee2dc
(14) Finished request
Waking up in 4.9 seconds.
(15) Received Access-Request Id 5 from 127.0.0.1:40495 to 127.0.0.1:1812 length 142
(15)   User-Name = "barath"
(15)   NAS-IP-Address = 127.0.0.1
(15)   Calling-Station-Id = "02-00-00-00-00-01"
(15)   Framed-MTU = 1400
(15)   NAS-Port-Type = Wireless-802.11
(15)   Service-Type = Framed-User
(15)   Connect-Info = "CONNECT 11Mbps 802.11b"
(15)   Called-Station-Id = ""
(15)   EAP-Message = 0x024700061900
(15)   State = 0x045eb2330019ab9d3ec910cea4cee2dc
(15)   Message-Authenticator = 0xed3c3e60f8cf10b0c7a9e1e44f30a4c6
(15) Restoring &session-state
(15)   &session-state:Framed-MTU = 994
(15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(15)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(15)   &session-state:TLS-Session-Version = "TLS 1.2"
(15) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(15)   authorize {
(15)     policy filter_username {
(15)       if (&User-Name) {
(15)       if (&User-Name)  -> TRUE
(15)       if (&User-Name)  {
(15)         if (&User-Name =~ / /) {
(15)         if (&User-Name =~ / /)  -> FALSE
(15)         if (&User-Name =~ /@[^@]*@/ ) {
(15)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(15)         if (&User-Name =~ /\.\./ ) {
(15)         if (&User-Name =~ /\.\./ )  -> FALSE
(15)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(15)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(15)         if (&User-Name =~ /\.$/)  {
(15)         if (&User-Name =~ /\.$/)   -> FALSE
(15)         if (&User-Name =~ /@\./)  {
(15)         if (&User-Name =~ /@\./)   -> FALSE
(15)       } # if (&User-Name)  = notfound
(15)     } # policy filter_username = notfound
(15)     [preprocess] = ok
(15)     [chap] = noop
(15)     [mschap] = noop
(15)     [digest] = noop
(15) suffix: Checking for suffix after "@"
(15) suffix: No '@' in User-Name = "barath", looking up realm NULL
(15) suffix: No such realm "NULL"
(15)     [suffix] = noop
(15) eap: Peer sent EAP Response (code 2) ID 71 length 6
(15) eap: Continuing tunnel setup
(15)     [eap] = ok
(15)   } # authorize = ok
(15) Found Auth-Type = eap
(15) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(15)   authenticate {
(15) eap: Expiring EAP session with state 0x045eb2330019ab9d
(15) eap: Finished EAP session with state 0x045eb2330019ab9d
(15) eap: Previous EAP request found for state 0x045eb2330019ab9d, released from the list
(15) eap: Peer sent packet with method EAP PEAP (25)
(15) eap: Calling submodule eap_peap to process data
(15) eap_peap: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(15) eap_peap: Session established.  Decoding tunneled attributes
(15) eap_peap: PEAP state TUNNEL ESTABLISHED
(15) eap: Sending EAP Request (code 1) ID 72 length 40
(15) eap: EAP session adding &reply:State = 0x045eb2330116ab9d
(15)     [eap] = handled
(15)   } # authenticate = handled
(15) Using Post-Auth-Type Challenge
(15) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(15)   Challenge { ... } # empty sub-section is ignored
(15) session-state: Saving cached attributes
(15)   Framed-MTU = 994
(15)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(15)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(15)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(15)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(15)   TLS-Session-Version = "TLS 1.2"
(15) Sent Access-Challenge Id 5 from 127.0.0.1:1812 to 127.0.0.1:40495 length 98
(15)   EAP-Message = 0x014800281900170303001d93c1d69ab80d9226d888ec79413564ba6ba67c748f9af302e0645183a3
(15)   Message-Authenticator = 0x00000000000000000000000000000000
(15)   State = 0x045eb2330116ab9d3ec910cea4cee2dc
(15) Finished request
Waking up in 4.9 seconds.
(16) Received Access-Request Id 6 from 127.0.0.1:40495 to 127.0.0.1:1812 length 178
(16)   User-Name = "barath"
(16)   NAS-IP-Address = 127.0.0.1
(16)   Calling-Station-Id = "02-00-00-00-00-01"
(16)   Framed-MTU = 1400
(16)   NAS-Port-Type = Wireless-802.11
(16)   Service-Type = Framed-User
(16)   Connect-Info = "CONNECT 11Mbps 802.11b"
(16)   Called-Station-Id = ""
(16)   EAP-Message = 0x0248002a1900170303001ffbc60bfc38886528b70f78ac972beb0cd205fa6535f86c470e254f90c127dc
(16)   State = 0x045eb2330116ab9d3ec910cea4cee2dc
(16)   Message-Authenticator = 0x5d5503917d876a060753138395ef96bf
(16) Restoring &session-state
(16)   &session-state:Framed-MTU = 994
(16)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(16)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(16)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(16)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(16)   &session-state:TLS-Session-Version = "TLS 1.2"
(16) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(16)   authorize {
(16)     policy filter_username {
(16)       if (&User-Name) {
(16)       if (&User-Name)  -> TRUE
(16)       if (&User-Name)  {
(16)         if (&User-Name =~ / /) {
(16)         if (&User-Name =~ / /)  -> FALSE
(16)         if (&User-Name =~ /@[^@]*@/ ) {
(16)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(16)         if (&User-Name =~ /\.\./ ) {
(16)         if (&User-Name =~ /\.\./ )  -> FALSE
(16)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(16)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(16)         if (&User-Name =~ /\.$/)  {
(16)         if (&User-Name =~ /\.$/)   -> FALSE
(16)         if (&User-Name =~ /@\./)  {
(16)         if (&User-Name =~ /@\./)   -> FALSE
(16)       } # if (&User-Name)  = notfound
(16)     } # policy filter_username = notfound
(16)     [preprocess] = ok
(16)     [chap] = noop
(16)     [mschap] = noop
(16)     [digest] = noop
(16) suffix: Checking for suffix after "@"
(16) suffix: No '@' in User-Name = "barath", looking up realm NULL
(16) suffix: No such realm "NULL"
(16)     [suffix] = noop
(16) eap: Peer sent EAP Response (code 2) ID 72 length 42
(16) eap: Continuing tunnel setup
(16)     [eap] = ok
(16)   } # authorize = ok
(16) Found Auth-Type = eap
(16) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(16)   authenticate {
(16) eap: Expiring EAP session with state 0x045eb2330116ab9d
(16) eap: Finished EAP session with state 0x045eb2330116ab9d
(16) eap: Previous EAP request found for state 0x045eb2330116ab9d, released from the list
(16) eap: Peer sent packet with method EAP PEAP (25)
(16) eap: Calling submodule eap_peap to process data
(16) eap_peap: (TLS) EAP Done initial handshake
(16) eap_peap: Session established.  Decoding tunneled attributes
(16) eap_peap: PEAP state WAITING FOR INNER IDENTITY
(16) eap_peap: Identity - barath
(16) eap_peap: Got inner identity 'barath'
(16) eap_peap: Setting default EAP type for tunneled EAP session
(16) eap_peap: Got tunneled request
(16) eap_peap:   EAP-Message = 0x0248000b01626172617468
(16) eap_peap: Setting User-Name to barath
(16) eap_peap: Sending tunneled request to inner-tunnel
(16) eap_peap:   EAP-Message = 0x0248000b01626172617468
(16) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(16) eap_peap:   User-Name = "barath"
(16) Virtual server inner-tunnel received request
(16)   EAP-Message = 0x0248000b01626172617468
(16)   FreeRADIUS-Proxied-To = 127.0.0.1
(16)   User-Name = "barath"
(16) WARNING: Outer and inner identities are the same.  User privacy is compromised.
(16) server inner-tunnel {
(16)   # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(16)     authorize {
(16)       policy filter_username {
(16)         if (&User-Name) {
(16)         if (&User-Name)  -> TRUE
(16)         if (&User-Name)  {
(16)           if (&User-Name =~ / /) {
(16)           if (&User-Name =~ / /)  -> FALSE
(16)           if (&User-Name =~ /@[^@]*@/ ) {
(16)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(16)           if (&User-Name =~ /\.\./ ) {
(16)           if (&User-Name =~ /\.\./ )  -> FALSE
(16)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(16)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(16)           if (&User-Name =~ /\.$/)  {
(16)           if (&User-Name =~ /\.$/)   -> FALSE
(16)           if (&User-Name =~ /@\./)  {
(16)           if (&User-Name =~ /@\./)   -> FALSE
(16)         } # if (&User-Name)  = notfound
(16)       } # policy filter_username = notfound
(16)       [chap] = noop
(16)       [mschap] = noop
(16) suffix: Checking for suffix after "@"
(16) suffix: No '@' in User-Name = "barath", looking up realm NULL
(16) suffix: No such realm "NULL"
(16)       [suffix] = noop
(16)       update control {
(16)         &Proxy-To-Realm := LOCAL
(16)       } # update control = noop
(16) eap: Peer sent EAP Response (code 2) ID 72 length 11
(16) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(16)       [eap] = ok
(16)     } # authorize = ok
(16)   Found Auth-Type = eap
(16)   # Executing group from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(16)     authenticate {
(16) eap: Peer sent packet with method EAP Identity (1)
(16) eap: Calling submodule eap_mschapv2 to process data
(16) eap_mschapv2: Issuing Challenge
(16) eap: Sending EAP Request (code 1) ID 73 length 43
(16) eap: EAP session adding &reply:State = 0xb183d550b1cacf60
(16)       [eap] = handled
(16)     } # authenticate = handled
(16) } # server inner-tunnel
(16) Virtual server sending reply
(16)   EAP-Message = 0x0149002b1a0149002610dc2b06b35412e3e4d42aa0d4d6fd012d667265657261646975732d332e302e3236
(16)   Message-Authenticator = 0x00000000000000000000000000000000
(16)   State = 0xb183d550b1cacf600b08328bc34f857c
(16) eap_peap: Got tunneled reply code 11
(16) eap_peap:   EAP-Message = 0x0149002b1a0149002610dc2b06b35412e3e4d42aa0d4d6fd012d667265657261646975732d332e302e3236
(16) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(16) eap_peap:   State = 0xb183d550b1cacf600b08328bc34f857c
(16) eap_peap: Got tunneled reply RADIUS code 11
(16) eap_peap:   EAP-Message = 0x0149002b1a0149002610dc2b06b35412e3e4d42aa0d4d6fd012d667265657261646975732d332e302e3236
(16) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(16) eap_peap:   State = 0xb183d550b1cacf600b08328bc34f857c
(16) eap_peap: Got tunneled Access-Challenge
(16) eap: Sending EAP Request (code 1) ID 73 length 74
(16) eap: EAP session adding &reply:State = 0x045eb2330217ab9d
(16)     [eap] = handled
(16)   } # authenticate = handled
(16) Using Post-Auth-Type Challenge
(16) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(16)   Challenge { ... } # empty sub-section is ignored
(16) session-state: Saving cached attributes
(16)   Framed-MTU = 994
(16)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(16)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(16)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(16)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(16)   TLS-Session-Version = "TLS 1.2"
(16) Sent Access-Challenge Id 6 from 127.0.0.1:1812 to 127.0.0.1:40495 length 132
(16)   EAP-Message = 0x0149004a1900170303003f93c1d69ab80d9227d52217fdb7705a1ecad3738c98641cd9fd742b3fd27c9ee290c03a627ca051bc1f950dcb29d62c0eb4b4b675a9a674cf5f8d5e68ed7b12
(16)   Message-Authenticator = 0x00000000000000000000000000000000
(16)   State = 0x045eb2330217ab9d3ec910cea4cee2dc
(16) Finished request
Waking up in 4.9 seconds.
(17) Received Access-Request Id 7 from 127.0.0.1:40495 to 127.0.0.1:1812 length 232
(17)   User-Name = "barath"
(17)   NAS-IP-Address = 127.0.0.1
(17)   Calling-Station-Id = "02-00-00-00-00-01"
(17)   Framed-MTU = 1400
(17)   NAS-Port-Type = Wireless-802.11
(17)   Service-Type = Framed-User
(17)   Connect-Info = "CONNECT 11Mbps 802.11b"
(17)   Called-Station-Id = ""
(17)   EAP-Message = 0x0249006019001703030055fbc60bfc38886529fd6d3922db5ef5d4083cf04ab399c656945527bd58d9ef825227dc62a63d2e18ce1c7761b96c9f7137859d9d7ae5a0245d43e6c5e8d9b1fb87f3249dd257577770d71c8830a8a6df8a2b4f2048
(17)   State = 0x045eb2330217ab9d3ec910cea4cee2dc
(17)   Message-Authenticator = 0x881b4b57efe05604aa89fb60816f0938
(17) Restoring &session-state
(17)   &session-state:Framed-MTU = 994
(17)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(17)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(17)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(17)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(17)   &session-state:TLS-Session-Version = "TLS 1.2"
(17) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(17)   authorize {
(17)     policy filter_username {
(17)       if (&User-Name) {
(17)       if (&User-Name)  -> TRUE
(17)       if (&User-Name)  {
(17)         if (&User-Name =~ / /) {
(17)         if (&User-Name =~ / /)  -> FALSE
(17)         if (&User-Name =~ /@[^@]*@/ ) {
(17)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(17)         if (&User-Name =~ /\.\./ ) {
(17)         if (&User-Name =~ /\.\./ )  -> FALSE
(17)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(17)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(17)         if (&User-Name =~ /\.$/)  {
(17)         if (&User-Name =~ /\.$/)   -> FALSE
(17)         if (&User-Name =~ /@\./)  {
(17)         if (&User-Name =~ /@\./)   -> FALSE
(17)       } # if (&User-Name)  = notfound
(17)     } # policy filter_username = notfound
(17)     [preprocess] = ok
(17)     [chap] = noop
(17)     [mschap] = noop
(17)     [digest] = noop
(17) suffix: Checking for suffix after "@"
(17) suffix: No '@' in User-Name = "barath", looking up realm NULL
(17) suffix: No such realm "NULL"
(17)     [suffix] = noop
(17) eap: Peer sent EAP Response (code 2) ID 73 length 96
(17) eap: Continuing tunnel setup
(17)     [eap] = ok
(17)   } # authorize = ok
(17) Found Auth-Type = eap
(17) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(17)   authenticate {
(17) eap: Expiring EAP session with state 0xb183d550b1cacf60
(17) eap: Finished EAP session with state 0x045eb2330217ab9d
(17) eap: Previous EAP request found for state 0x045eb2330217ab9d, released from the list
(17) eap: Peer sent packet with method EAP PEAP (25)
(17) eap: Calling submodule eap_peap to process data
(17) eap_peap: (TLS) EAP Done initial handshake
(17) eap_peap: Session established.  Decoding tunneled attributes
(17) eap_peap: PEAP state phase2
(17) eap_peap: EAP method MSCHAPv2 (26)
(17) eap_peap: Got tunneled request
(17) eap_peap:   EAP-Message = 0x024900411a0249003c31a467c36a2b72e51604588628e63e8171000000000000000037c572850aa53cceda75d33f3d78e1c2463170bcf2d916a500626172617468
(17) eap_peap: Setting User-Name to barath
(17) eap_peap: Sending tunneled request to inner-tunnel
(17) eap_peap:   EAP-Message = 0x024900411a0249003c31a467c36a2b72e51604588628e63e8171000000000000000037c572850aa53cceda75d33f3d78e1c2463170bcf2d916a500626172617468
(17) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(17) eap_peap:   User-Name = "barath"
(17) eap_peap:   State = 0xb183d550b1cacf600b08328bc34f857c
(17) Virtual server inner-tunnel received request
(17)   EAP-Message = 0x024900411a0249003c31a467c36a2b72e51604588628e63e8171000000000000000037c572850aa53cceda75d33f3d78e1c2463170bcf2d916a500626172617468
(17)   FreeRADIUS-Proxied-To = 127.0.0.1
(17)   User-Name = "barath"
(17)   State = 0xb183d550b1cacf600b08328bc34f857c
(17) WARNING: Outer and inner identities are the same.  User privacy is compromised.
(17) server inner-tunnel {
(17)   session-state: No cached attributes
(17)   # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(17)     authorize {
(17)       policy filter_username {
(17)         if (&User-Name) {
(17)         if (&User-Name)  -> TRUE
(17)         if (&User-Name)  {
(17)           if (&User-Name =~ / /) {
(17)           if (&User-Name =~ / /)  -> FALSE
(17)           if (&User-Name =~ /@[^@]*@/ ) {
(17)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(17)           if (&User-Name =~ /\.\./ ) {
(17)           if (&User-Name =~ /\.\./ )  -> FALSE
(17)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(17)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(17)           if (&User-Name =~ /\.$/)  {
(17)           if (&User-Name =~ /\.$/)   -> FALSE
(17)           if (&User-Name =~ /@\./)  {
(17)           if (&User-Name =~ /@\./)   -> FALSE
(17)         } # if (&User-Name)  = notfound
(17)       } # policy filter_username = notfound
(17)       [chap] = noop
(17)       [mschap] = noop
(17) suffix: Checking for suffix after "@"
(17) suffix: No '@' in User-Name = "barath", looking up realm NULL
(17) suffix: No such realm "NULL"
(17)       [suffix] = noop
(17)       update control {
(17)         &Proxy-To-Realm := LOCAL
(17)       } # update control = noop
(17) eap: Peer sent EAP Response (code 2) ID 73 length 65
(17) eap: No EAP Start, assuming it's an on-going EAP conversation
(17)       [eap] = updated
(17) files: users: Matched entry barath at line 87
(17) files: EXPAND Hello, %{User-Name}
(17) files:    --> Hello, barath
(17)       [files] = ok
(17) sql: EXPAND %{User-Name}
(17) sql:    --> barath
(17) sql: SQL-User-Name set to 'barath'
rlm_sql (sql): Reserved connection (5)
(17) sql: EXPAND SELECT id, username, attribute, value, op FROM radcheck WHERE username = '%{SQL-User-Name}' ORDER BY id
(17) sql:    --> SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(17) sql: Executing select query: SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(17) sql: WARNING: User not found in radcheck table.
(17) sql: EXPAND SELECT groupname FROM radusergroup WHERE username = '%{SQL-User-Name}' ORDER BY priority
(17) sql:    --> SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(17) sql: Executing select query: SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(17) sql: User not found in any groups
rlm_sql (sql): Released connection (5)
(17)       [sql] = notfound
(17)       [expiration] = noop
(17)       [logintime] = noop
(17) pap: WARNING: Auth-Type already set.  Not setting to PAP
(17)       [pap] = noop
(17)     } # authorize = updated
(17)   Found Auth-Type = eap
(17)   # Executing group from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(17)     authenticate {
(17) eap: Expiring EAP session with state 0xb183d550b1cacf60
(17) eap: Finished EAP session with state 0xb183d550b1cacf60
(17) eap: Previous EAP request found for state 0xb183d550b1cacf60, released from the list
(17) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(17) eap: Calling submodule eap_mschapv2 to process data
(17) eap_mschapv2: # Executing group from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(17) eap_mschapv2:   authenticate {
(17) mschap: Found Cleartext-Password, hashing to create NT-Password
(17) mschap: Creating challenge hash with username: barath
(17) mschap: Client is using MS-CHAPv2
(17) mschap: Adding MS-CHAPv2 MPPE keys
(17) eap_mschapv2:     [mschap] = ok
(17) eap_mschapv2:   } # authenticate = ok
(17) eap_mschapv2: MSCHAP Success
(17) eap: Sending EAP Request (code 1) ID 74 length 51
(17) eap: EAP session adding &reply:State = 0xb183d550b0c9cf60
(17)       [eap] = handled
(17)     } # authenticate = handled
(17) } # server inner-tunnel
(17) Virtual server sending reply
(17)   Reply-Message = "Hello, barath"
(17)   EAP-Message = 0x014a00331a0349002e533d34454541384642393935433245413846363043453132304245324639304533394437324537384430
(17)   Message-Authenticator = 0x00000000000000000000000000000000
(17)   State = 0xb183d550b0c9cf600b08328bc34f857c
(17) eap_peap: Got tunneled reply code 11
(17) eap_peap:   Reply-Message = "Hello, barath"
(17) eap_peap:   EAP-Message = 0x014a00331a0349002e533d34454541384642393935433245413846363043453132304245324639304533394437324537384430
(17) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(17) eap_peap:   State = 0xb183d550b0c9cf600b08328bc34f857c
(17) eap_peap: Got tunneled reply RADIUS code 11
(17) eap_peap:   Reply-Message = "Hello, barath"
(17) eap_peap:   EAP-Message = 0x014a00331a0349002e533d34454541384642393935433245413846363043453132304245324639304533394437324537384430
(17) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(17) eap_peap:   State = 0xb183d550b0c9cf600b08328bc34f857c
(17) eap_peap: Got tunneled Access-Challenge
(17) eap: Sending EAP Request (code 1) ID 74 length 82
(17) eap: EAP session adding &reply:State = 0x045eb2330314ab9d
(17)     [eap] = handled
(17)   } # authenticate = handled
(17) Using Post-Auth-Type Challenge
(17) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(17)   Challenge { ... } # empty sub-section is ignored
(17) session-state: Saving cached attributes
(17)   Framed-MTU = 994
(17)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(17)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(17)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(17)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(17)   TLS-Session-Version = "TLS 1.2"
(17) Sent Access-Challenge Id 7 from 127.0.0.1:1812 to 127.0.0.1:40495 length 140
(17)   EAP-Message = 0x014a00521900170303004793c1d69ab80d92280c99f94602917ba1cb9ef0de3314399072caa7a6c4c61676a63aaabba820fc3c185731356b112f7c036fee83ff0b5f8b01b1670e41876950d8913f41f0c8a6
(17)   Message-Authenticator = 0x00000000000000000000000000000000
(17)   State = 0x045eb2330314ab9d3ec910cea4cee2dc
(17) Finished request
Waking up in 4.9 seconds.
(18) Received Access-Request Id 8 from 127.0.0.1:40495 to 127.0.0.1:1812 length 173
(18)   User-Name = "barath"
(18)   NAS-IP-Address = 127.0.0.1
(18)   Calling-Station-Id = "02-00-00-00-00-01"
(18)   Framed-MTU = 1400
(18)   NAS-Port-Type = Wireless-802.11
(18)   Service-Type = Framed-User
(18)   Connect-Info = "CONNECT 11Mbps 802.11b"
(18)   Called-Station-Id = ""
(18)   EAP-Message = 0x024a00251900170303001afbc60bfc3888652ae95416ab12fe776037992fb53f75dcae8589
(18)   State = 0x045eb2330314ab9d3ec910cea4cee2dc
(18)   Message-Authenticator = 0x63168bb3b18a7a78d05efe622bcc90f5
(18) Restoring &session-state
(18)   &session-state:Framed-MTU = 994
(18)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(18)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(18)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(18)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(18)   &session-state:TLS-Session-Version = "TLS 1.2"
(18) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(18)   authorize {
(18)     policy filter_username {
(18)       if (&User-Name) {
(18)       if (&User-Name)  -> TRUE
(18)       if (&User-Name)  {
(18)         if (&User-Name =~ / /) {
(18)         if (&User-Name =~ / /)  -> FALSE
(18)         if (&User-Name =~ /@[^@]*@/ ) {
(18)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(18)         if (&User-Name =~ /\.\./ ) {
(18)         if (&User-Name =~ /\.\./ )  -> FALSE
(18)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(18)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(18)         if (&User-Name =~ /\.$/)  {
(18)         if (&User-Name =~ /\.$/)   -> FALSE
(18)         if (&User-Name =~ /@\./)  {
(18)         if (&User-Name =~ /@\./)   -> FALSE
(18)       } # if (&User-Name)  = notfound
(18)     } # policy filter_username = notfound
(18)     [preprocess] = ok
(18)     [chap] = noop
(18)     [mschap] = noop
(18)     [digest] = noop
(18) suffix: Checking for suffix after "@"
(18) suffix: No '@' in User-Name = "barath", looking up realm NULL
(18) suffix: No such realm "NULL"
(18)     [suffix] = noop
(18) eap: Peer sent EAP Response (code 2) ID 74 length 37
(18) eap: Continuing tunnel setup
(18)     [eap] = ok
(18)   } # authorize = ok
(18) Found Auth-Type = eap
(18) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(18)   authenticate {
(18) eap: Expiring EAP session with state 0xb183d550b0c9cf60
(18) eap: Finished EAP session with state 0x045eb2330314ab9d
(18) eap: Previous EAP request found for state 0x045eb2330314ab9d, released from the list
(18) eap: Peer sent packet with method EAP PEAP (25)
(18) eap: Calling submodule eap_peap to process data
(18) eap_peap: (TLS) EAP Done initial handshake
(18) eap_peap: Session established.  Decoding tunneled attributes
(18) eap_peap: PEAP state phase2
(18) eap_peap: EAP method MSCHAPv2 (26)
(18) eap_peap: Got tunneled request
(18) eap_peap:   EAP-Message = 0x024a00061a03
(18) eap_peap: Setting User-Name to barath
(18) eap_peap: Sending tunneled request to inner-tunnel
(18) eap_peap:   EAP-Message = 0x024a00061a03
(18) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(18) eap_peap:   User-Name = "barath"
(18) eap_peap:   State = 0xb183d550b0c9cf600b08328bc34f857c
(18) Virtual server inner-tunnel received request
(18)   EAP-Message = 0x024a00061a03
(18)   FreeRADIUS-Proxied-To = 127.0.0.1
(18)   User-Name = "barath"
(18)   State = 0xb183d550b0c9cf600b08328bc34f857c
(18) WARNING: Outer and inner identities are the same.  User privacy is compromised.
(18) server inner-tunnel {
(18)   session-state: No cached attributes
(18)   # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(18)     authorize {
(18)       policy filter_username {
(18)         if (&User-Name) {
(18)         if (&User-Name)  -> TRUE
(18)         if (&User-Name)  {
(18)           if (&User-Name =~ / /) {
(18)           if (&User-Name =~ / /)  -> FALSE
(18)           if (&User-Name =~ /@[^@]*@/ ) {
(18)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(18)           if (&User-Name =~ /\.\./ ) {
(18)           if (&User-Name =~ /\.\./ )  -> FALSE
(18)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(18)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(18)           if (&User-Name =~ /\.$/)  {
(18)           if (&User-Name =~ /\.$/)   -> FALSE
(18)           if (&User-Name =~ /@\./)  {
(18)           if (&User-Name =~ /@\./)   -> FALSE
(18)         } # if (&User-Name)  = notfound
(18)       } # policy filter_username = notfound
(18)       [chap] = noop
(18)       [mschap] = noop
(18) suffix: Checking for suffix after "@"
(18) suffix: No '@' in User-Name = "barath", looking up realm NULL
(18) suffix: No such realm "NULL"
(18)       [suffix] = noop
(18)       update control {
(18)         &Proxy-To-Realm := LOCAL
(18)       } # update control = noop
(18) eap: Peer sent EAP Response (code 2) ID 74 length 6
(18) eap: No EAP Start, assuming it's an on-going EAP conversation
(18)       [eap] = updated
(18) files: users: Matched entry barath at line 87
(18) files: EXPAND Hello, %{User-Name}
(18) files:    --> Hello, barath
(18)       [files] = ok
(18) sql: EXPAND %{User-Name}
(18) sql:    --> barath
(18) sql: SQL-User-Name set to 'barath'
rlm_sql (sql): Reserved connection (7)
(18) sql: EXPAND SELECT id, username, attribute, value, op FROM radcheck WHERE username = '%{SQL-User-Name}' ORDER BY id
(18) sql:    --> SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(18) sql: Executing select query: SELECT id, username, attribute, value, op FROM radcheck WHERE username = 'barath' ORDER BY id
(18) sql: WARNING: User not found in radcheck table.
(18) sql: EXPAND SELECT groupname FROM radusergroup WHERE username = '%{SQL-User-Name}' ORDER BY priority
(18) sql:    --> SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(18) sql: Executing select query: SELECT groupname FROM radusergroup WHERE username = 'barath' ORDER BY priority
(18) sql: User not found in any groups
rlm_sql (sql): Released connection (7)
(18)       [sql] = notfound
(18)       [expiration] = noop
(18)       [logintime] = noop
(18) pap: WARNING: Auth-Type already set.  Not setting to PAP
(18)       [pap] = noop
(18)     } # authorize = updated
(18)   Found Auth-Type = eap
(18)   # Executing group from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(18)     authenticate {
(18) eap: Expiring EAP session with state 0xb183d550b0c9cf60
(18) eap: Finished EAP session with state 0xb183d550b0c9cf60
(18) eap: Previous EAP request found for state 0xb183d550b0c9cf60, released from the list
(18) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(18) eap: Calling submodule eap_mschapv2 to process data
(18) eap: Sending EAP Success (code 3) ID 74 length 4
(18) eap: Freeing handler
(18)       [eap] = ok
(18)     } # authenticate = ok
(18)   # Executing section post-auth from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
(18)     post-auth {
(18) sql: EXPAND .query
(18) sql:    --> .query
(18) sql: Using query template 'query'
rlm_sql (sql): Reserved connection (5)
(18) sql: EXPAND %{User-Name}
(18) sql:    --> barath
(18) sql: SQL-User-Name set to 'barath'
(18) sql: EXPAND INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( '%{SQL-User-Name}', '%{%{User-Password}:-%{Chap-Password}}', '%{reply:Packet-Type}', '%S.%M' )
(18) sql:    --> INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( 'barath', '', 'Access-Accept', '2024-06-13 16:32:34.095748' )
(18) sql: Executing query: INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( 'barath', '', 'Access-Accept', '2024-06-13 16:32:34.095748' )
(18) sql: SQL query returned: success
(18) sql: 1 record(s) updated
rlm_sql (sql): Released connection (5)
(18)       [sql] = ok
(18)       if (0) {
(18)       if (0)  -> FALSE
(18)     } # post-auth = ok
(18) } # server inner-tunnel
(18) Virtual server sending reply
(18)   Reply-Message = "Hello, barath"
(18)   MS-MPPE-Encryption-Policy = Encryption-Allowed
(18)   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(18)   MS-MPPE-Send-Key = 0x29a1b6e9a9cc565f71ee853547d58440
(18)   MS-MPPE-Recv-Key = 0x5764e49a9668cdea8e97b2f51bc9e370
(18)   EAP-Message = 0x034a0004
(18)   Message-Authenticator = 0x00000000000000000000000000000000
(18)   User-Name = "barath"
(18) eap_peap: Got tunneled reply code 2
(18) eap_peap:   Reply-Message = "Hello, barath"
(18) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(18) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(18) eap_peap:   MS-MPPE-Send-Key = 0x29a1b6e9a9cc565f71ee853547d58440
(18) eap_peap:   MS-MPPE-Recv-Key = 0x5764e49a9668cdea8e97b2f51bc9e370
(18) eap_peap:   EAP-Message = 0x034a0004
(18) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(18) eap_peap:   User-Name = "barath"
(18) eap_peap: Got tunneled reply RADIUS code 2
(18) eap_peap:   Reply-Message = "Hello, barath"
(18) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(18) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(18) eap_peap:   MS-MPPE-Send-Key = 0x29a1b6e9a9cc565f71ee853547d58440
(18) eap_peap:   MS-MPPE-Recv-Key = 0x5764e49a9668cdea8e97b2f51bc9e370
(18) eap_peap:   EAP-Message = 0x034a0004
(18) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(18) eap_peap:   User-Name = "barath"
(18) eap_peap: Tunneled authentication was successful
(18) eap_peap: SUCCESS
(18) eap_peap: Saving tunneled attributes for later
(18) eap: Sending EAP Request (code 1) ID 75 length 46
(18) eap: EAP session adding &reply:State = 0x045eb2330c15ab9d
(18)     [eap] = handled
(18)   } # authenticate = handled
(18) Using Post-Auth-Type Challenge
(18) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(18)   Challenge { ... } # empty sub-section is ignored
(18) session-state: Saving cached attributes
(18)   Framed-MTU = 994
(18)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(18)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(18)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(18)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(18)   TLS-Session-Version = "TLS 1.2"
(18) Sent Access-Challenge Id 8 from 127.0.0.1:1812 to 127.0.0.1:40495 length 104
(18)   EAP-Message = 0x014b002e1900170303002393c1d69ab80d92290bde78cbaa3217a999d4ca5a82792b05fbd7bef502b638cc9d1323
(18)   Message-Authenticator = 0x00000000000000000000000000000000
(18)   State = 0x045eb2330c15ab9d3ec910cea4cee2dc
(18) Finished request
Waking up in 4.9 seconds.
(19) Received Access-Request Id 9 from 127.0.0.1:40495 to 127.0.0.1:1812 length 182
(19)   User-Name = "barath"
(19)   NAS-IP-Address = 127.0.0.1
(19)   Calling-Station-Id = "02-00-00-00-00-01"
(19)   Framed-MTU = 1400
(19)   NAS-Port-Type = Wireless-802.11
(19)   Service-Type = Framed-User
(19)   Connect-Info = "CONNECT 11Mbps 802.11b"
(19)   Called-Station-Id = ""
(19)   EAP-Message = 0x024b002e19001703030023fbc60bfc3888652b16110db90a17a1d0191ae5e30eb6adf1efcb42c4769c125e9bd1db
(19)   State = 0x045eb2330c15ab9d3ec910cea4cee2dc
(19)   Message-Authenticator = 0xe149dc15cefb21d17604f7f4da655405
(19) Restoring &session-state
(19)   &session-state:Framed-MTU = 994
(19)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(19)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(19)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(19)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(19)   &session-state:TLS-Session-Version = "TLS 1.2"
(19) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(19)   authorize {
(19)     policy filter_username {
(19)       if (&User-Name) {
(19)       if (&User-Name)  -> TRUE
(19)       if (&User-Name)  {
(19)         if (&User-Name =~ / /) {
(19)         if (&User-Name =~ / /)  -> FALSE
(19)         if (&User-Name =~ /@[^@]*@/ ) {
(19)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(19)         if (&User-Name =~ /\.\./ ) {
(19)         if (&User-Name =~ /\.\./ )  -> FALSE
(19)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(19)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(19)         if (&User-Name =~ /\.$/)  {
(19)         if (&User-Name =~ /\.$/)   -> FALSE
(19)         if (&User-Name =~ /@\./)  {
(19)         if (&User-Name =~ /@\./)   -> FALSE
(19)       } # if (&User-Name)  = notfound
(19)     } # policy filter_username = notfound
(19)     [preprocess] = ok
(19)     [chap] = noop
(19)     [mschap] = noop
(19)     [digest] = noop
(19) suffix: Checking for suffix after "@"
(19) suffix: No '@' in User-Name = "barath", looking up realm NULL
(19) suffix: No such realm "NULL"
(19)     [suffix] = noop
(19) eap: Peer sent EAP Response (code 2) ID 75 length 46
(19) eap: Continuing tunnel setup
(19)     [eap] = ok
(19)   } # authorize = ok
(19) Found Auth-Type = eap
(19) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(19)   authenticate {
(19) eap: Expiring EAP session with state 0x045eb2330c15ab9d
(19) eap: Finished EAP session with state 0x045eb2330c15ab9d
(19) eap: Previous EAP request found for state 0x045eb2330c15ab9d, released from the list
(19) eap: Peer sent packet with method EAP PEAP (25)
(19) eap: Calling submodule eap_peap to process data
(19) eap_peap: (TLS) EAP Done initial handshake
(19) eap_peap: Session established.  Decoding tunneled attributes
(19) eap_peap: PEAP state send tlv success
(19) eap_peap: Received EAP-TLV response
(19) eap_peap: Success
(19) eap_peap: Using saved attributes from the original Access-Accept
(19) eap_peap:   Reply-Message = "Hello, barath"
(19) eap_peap:   User-Name = "barath"
(19) eap: Sending EAP Success (code 3) ID 75 length 4
(19) eap: Freeing handler
(19)     [eap] = ok
(19)   } # authenticate = ok
(19) # Executing section post-auth from file /etc/freeradius/3.0/sites-enabled/default
(19)   post-auth {
(19)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(19)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(19)     update {
(19)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(19)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(19)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(19)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(19)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(19)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(19)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(19)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(19)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(19)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(19)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(19)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(19)     } # update = noop
(19) sql: EXPAND .query
(19) sql:    --> .query
(19) sql: Using query template 'query'
rlm_sql (sql): Reserved connection (7)
(19) sql: EXPAND %{User-Name}
(19) sql:    --> barath
(19) sql: SQL-User-Name set to 'barath'
(19) sql: EXPAND INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( '%{SQL-User-Name}', '%{%{User-Password}:-%{Chap-Password}}', '%{reply:Packet-Type}', '%S.%M' )
(19) sql:    --> INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( 'barath', '', 'Access-Accept', '2024-06-13 16:32:34.098023' )
(19) sql: Executing query: INSERT INTO radpostauth (username, pass, reply, authdate ) VALUES ( 'barath', '', 'Access-Accept', '2024-06-13 16:32:34.098023' )
(19) sql: SQL query returned: success
(19) sql: 1 record(s) updated
rlm_sql (sql): Released connection (7)
(19)     [sql] = ok
(19)     [exec] = noop
(19)     policy remove_reply_message_if_eap {
(19)       if (&reply:EAP-Message && &reply:Reply-Message) {
(19)       if (&reply:EAP-Message && &reply:Reply-Message)  -> TRUE
(19)       if (&reply:EAP-Message && &reply:Reply-Message)  {
(19)         update reply {
(19)           &Reply-Message !* ANY
(19)         } # update reply = noop
(19)       } # if (&reply:EAP-Message && &reply:Reply-Message)  = noop
(19)       ... skipping else: Preceding "if" was taken
(19)     } # policy remove_reply_message_if_eap = noop
(19)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(19)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(19)   } # post-auth = ok
(19) Sent Access-Accept Id 9 from 127.0.0.1:1812 to 127.0.0.1:40495 length 174
(19)   User-Name = "barath"
(19)   MS-MPPE-Recv-Key = 0x6b239bdfba062f3b459d9efa4e79339a28e009bf773d336a3d2e1d116daa045b
(19)   MS-MPPE-Send-Key = 0x775dd13eef0bb94e5ab5e262dafa0d0c196269f12dd7a6a242f235713ab65ab3
(19)   EAP-Message = 0x034b0004
(19)   Message-Authenticator = 0x00000000000000000000000000000000
(19)   Framed-MTU += 994
(19) Finished request
Waking up in 4.9 seconds.
(10) Cleaning up request packet ID 0 with timestamp +164 due to cleanup_delay was reached
(11) Cleaning up request packet ID 1 with timestamp +164 due to cleanup_delay was reached
(12) Cleaning up request packet ID 2 with timestamp +164 due to cleanup_delay was reached
(13) Cleaning up request packet ID 3 with timestamp +164 due to cleanup_delay was reached
(14) Cleaning up request packet ID 4 with timestamp +164 due to cleanup_delay was reached
(15) Cleaning up request packet ID 5 with timestamp +164 due to cleanup_delay was reached
(16) Cleaning up request packet ID 6 with timestamp +164 due to cleanup_delay was reached
(17) Cleaning up request packet ID 7 with timestamp +164 due to cleanup_delay was reached
(18) Cleaning up request packet ID 8 with timestamp +164 due to cleanup_delay was reached
(19) Cleaning up request packet ID 9 with timestamp +164 due to cleanup_delay was reached
Ready to process requests
